{
  "version": 3,
  "sources": ["../../src/client/utils/index.ts", "../../src/client/camera.ts", "../../src/data/head.ts", "../../src/data/face.ts", "../../src/data/drawables.ts", "../../src/data/props.ts", "../../src/client/appearance/getters.ts", "../../src/data/toggles.ts", "../../src/client/appearance/setters.ts", "../../src/client/handlers.ts", "../../src/client/menu.ts", "../../src/client/init.ts"],
  "sourcesContent": ["export let ped = 0\r\n\r\nexport const updatePed = (pedHandle: number) => {\r\n    ped = pedHandle\r\n}\r\n\r\nexport const debugdata = (data: any) => {\r\n    console.log(JSON.stringify(data, (key, value) => {\r\n        if (typeof value === \"string\") {\r\n            return value.replace(/\\n/g, \"\\\\n\");\r\n        }\r\n        return value;\r\n    }, 2))\r\n}\r\n\r\nexport const sendNUIEvent = (action: string, data: any) => {\r\n    SendNUIMessage({\r\n        action: action,\r\n        data: data\r\n    });\r\n}\r\n\r\nexport const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\r\n\r\nexport const requestModel = async (model: string | number): Promise<number> => {\r\n    let modelHash: number = typeof model === 'number' ? model : GetHashKey(model)\r\n\r\n    if (!IsModelValid(modelHash)) {\r\n        exports.bl_bridge.notify()({\r\n            title: 'Invalid model!',\r\n            type: 'error',\r\n            duration: 1000\r\n        })\r\n\r\n        throw new Error(`attempted to load invalid model '${model}'`);\r\n    }\r\n\r\n    if (HasModelLoaded(modelHash)) return modelHash\r\n    \r\n    RequestModel(modelHash);\r\n\r\n    const waitForModelLoaded = (): Promise<void> => {\r\n        return new Promise(resolve => {\r\n            const interval = setInterval(() => {\r\n                if (HasModelLoaded(modelHash)) {\r\n                    clearInterval(interval);\r\n                    resolve();\r\n                }\r\n            }, 100);\r\n        });\r\n    };\r\n\r\n    await waitForModelLoaded();\r\n\r\n    return modelHash;\r\n};\r\n\r\n\r\n//callback\r\n//https://github.com/overextended/ox_lib/blob/master/package/client/resource/callback/index.ts\r\n\r\nconst resourceName = GetCurrentResourceName()\r\nconst eventTimers: Record<string, number> = {};\r\nconst activeEvents: Record<string, (...args: any[]) => void> = {};\r\n\r\nfunction eventTimer(eventName: string, delay: number | null) {\r\n    if (delay && delay > 0) {\r\n        const currentTime = GetGameTimer();\r\n\r\n        if ((eventTimers[eventName] || 0) > currentTime) return false;\r\n\r\n        eventTimers[eventName] = currentTime + delay;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nonNet(`__ox_cb_${resourceName}`, (key: string, ...args: any) => {\r\n    const resolve = activeEvents[key];\r\n    return resolve && resolve(...args);\r\n});\r\n\r\nexport function triggerServerCallback<T = unknown>(\r\n    eventName: string, ...args: any\r\n): Promise<T> | void {\r\n    if (!eventTimer(eventName, 0)) {\r\n        return;\r\n    }\r\n\r\n    let key: string;\r\n\r\n    do {\r\n        key = `${eventName}:${Math.floor(Math.random() * (100000 + 1))}`;\r\n    } while (activeEvents[key]);\r\n\r\n    emitNet(`__ox_cb_${eventName}`, resourceName, key, ...args);\r\n\r\n    return new Promise<T>((resolve) => {\r\n        activeEvents[key] = resolve;\r\n    });\r\n};\r\n\r\nexport function onServerCallback(eventName, cb) {\r\n    onNet(`__ox_cb_${eventName}`, async (resource, key, ...args) => {\r\n        let response;\r\n        try {\r\n            response = await cb(...args);\r\n        }\r\n        catch (e) {\r\n            console.error(`an error occurred while handling callback event ${eventName}`);\r\n            console.log(`^3${e.stack}^0`);\r\n        }\r\n        emitNet(`__ox_cb_${resource}`, key, response);\r\n    });\r\n}\r\n\r\n//locale\r\n\r\nexport const requestLocale = (resourceSetName: string) => {\r\n    return new Promise((resolve) => {\r\n        const checkResourceFile = () => {\r\n            if (RequestResourceFileSet(resourceSetName)) {\r\n                const currentLan = exports.bl_appearance.config().locale\r\n                let localeFileContent = LoadResourceFile(resourceName, `locale/${currentLan}.json`);\r\n                if (!localeFileContent) {\r\n                    console.error(`${currentLan}.json not found in locale, please verify!, we used english for now!`)\r\n                    localeFileContent = LoadResourceFile(resourceName, `locale/en.json`)\r\n                }\r\n                resolve(localeFileContent);\r\n            } else {\r\n                setTimeout(checkResourceFile, 100);\r\n            }\r\n        }\r\n        checkResourceFile();\r\n    });\r\n}\r\n\r\nexport const locale = async (id: string, ...args: string[]) => {\r\n    const locale = await requestLocale('locale');\r\n    let argIndex = 0;\r\n\r\n    const result = locale[id].replace(/%s/g, (match: string) => argIndex < args.length ? args[argIndex] : match);\r\n    return result\r\n}\r\n\r\nexport const bl_bridge = exports.bl_bridge\r\n\r\nexport const getPlayerData = () => {\r\n    return bl_bridge.core().getPlayerData()\r\n}\r\n\r\nexport const getFrameworkID = () => {\r\n    const id = getPlayerData().cid\r\n    return id\r\n}", "import { Camera, Vector3, CameraBones } from '@typings/camera';\r\nimport { delay, ped } from '@utils';\r\nimport { Receive } from '@events';\r\n\r\nlet running: boolean = false;\r\nlet camDistance: number = 1.8;\r\nlet cam: Camera | null = null;\r\nlet angleY: number = 0.0;\r\nlet angleZ: number = 0.0;\r\nlet targetCoords: Vector3 | null = null;\r\nlet oldCam: Camera | null = null;\r\nlet changingCam: boolean = false;\r\nlet lastX: number = 0;\r\nlet currentBone: keyof CameraBones = 'head';\r\n\r\nconst CameraBones: CameraBones = {\r\n\thead: 31086,\r\n\ttorso: 24818,\r\n\tlegs: 14201,\r\n};\r\n\r\nconst cos = (degrees: number): number => {\r\n\treturn Math.cos((degrees * Math.PI) / 180);\r\n};\r\n\r\nconst sin = (degrees: number): number => {\r\n\treturn Math.sin((degrees * Math.PI) / 180);\r\n};\r\n\r\nconst getAngles = (): number[] => {\r\n\tconst x =\r\n\t\t((cos(angleZ) * cos(angleY) + cos(angleY) * cos(angleZ)) / 2) *\r\n\t\tcamDistance;\r\n\tconst y =\r\n\t\t((sin(angleZ) * cos(angleY) + cos(angleY) * sin(angleZ)) / 2) *\r\n\t\tcamDistance;\r\n\tconst z = sin(angleY) * camDistance;\r\n\r\n\treturn [x, y, z];\r\n};\r\n\r\nconst setCamPosition = (mouseX?: number, mouseY?: number): void => {\r\n\tif (!running || !targetCoords || changingCam) return;\r\n\r\n\tmouseX = mouseX ?? 0.0;\r\n\tmouseY = mouseY ?? 0.0;\r\n\r\n\tangleZ -= mouseX;\r\n\tangleY += mouseY;\r\n\tangleY = Math.min(Math.max(angleY, 0.0), 89.0);\r\n\r\n\tconst [x, y, z] = getAngles();\r\n\r\n\tSetCamCoord(\r\n\t\tcam,\r\n\t\ttargetCoords.x + x,\r\n\t\ttargetCoords.y + y,\r\n\t\ttargetCoords.z + z\r\n\t);\r\n\tPointCamAtCoord(cam, targetCoords.x, targetCoords.y, targetCoords.z);\r\n};\r\n\r\nconst moveCamera = async (coords: Vector3, distance?: number) => {\r\n\tconst heading: number = GetEntityHeading(ped) + 94;\r\n\tdistance = distance ?? 1.0;\r\n\r\n\tchangingCam = true;\r\n\tcamDistance = distance;\r\n\tangleZ = heading;\r\n\r\n\tconst [x, y, z] = getAngles();\r\n\r\n\tconst newcam: Camera = CreateCamWithParams(\r\n\t\t'DEFAULT_SCRIPTED_CAMERA',\r\n\t\tcoords.x + x,\r\n\t\tcoords.y + y,\r\n\t\tcoords.z + z,\r\n\t\t0.0,\r\n\t\t0.0,\r\n\t\t0.0,\r\n\t\t70.0,\r\n\t\tfalse,\r\n\t\t0\r\n\t);\r\n\r\n\ttargetCoords = coords;\r\n\tchangingCam = false;\r\n\toldCam = cam;\r\n\tcam = newcam;\r\n\r\n\tPointCamAtCoord(newcam, coords.x, coords.y, coords.z);\r\n\tSetCamActiveWithInterp(newcam, oldCam, 250, 0, 0);\r\n\r\n\tawait delay(250);\r\n\r\n\tSetCamUseShallowDofMode(newcam, true);\r\n\tSetCamNearDof(newcam, 0.4);\r\n\tSetCamFarDof(newcam, 1.2);\r\n\tSetCamDofStrength(newcam, 0.3);\r\n\tuseHiDof(newcam);\r\n\r\n\tDestroyCam(oldCam, true);\r\n};\r\n\r\nconst useHiDof = (currentcam: Camera) => {\r\n\tif (!(DoesCamExist(cam) && currentcam == cam)) return;\r\n\tSetUseHiDof();\r\n\tsetTimeout(useHiDof, 0);\r\n};\r\n\r\nexport const startCamera = () => {\r\n\tif (running) return;\r\n\trunning = true;\r\n\tcamDistance = 1.0;\r\n\tcam = CreateCam('DEFAULT_SCRIPTED_CAMERA', true);\r\n\tconst [x, y, z]: number[] = GetPedBoneCoords(ped, 31086, 0.0, 0.0, 0.0);\r\n\tSetCamCoord(cam, x, y, z);\r\n\tRenderScriptCams(true, true, 1000, true, true);\r\n\tmoveCamera({ x: x, y: y, z: z }, camDistance);\r\n};\r\n\r\nexport const stopCamera = (): void => {\r\n\tif (!running) return;\r\n\trunning = false;\r\n\r\n\tRenderScriptCams(false, true, 250, true, false);\r\n\tDestroyCam(cam, true);\r\n\tcam = null;\r\n\ttargetCoords = null;\r\n};\r\n\r\nconst setCamera = (type?: keyof CameraBones): void => {\r\n\tconst bone: number | undefined = CameraBones[type];\r\n\tif (currentBone == type) return;\r\n\r\n\tconst [x, y, z]: number[] = bone\r\n\t\t? GetPedBoneCoords(ped, bone, 0.0, 0.0, bone === 14201 ? 0.2 : 0.0)\r\n\t\t: GetEntityCoords(ped, false);\r\n\r\n\tmoveCamera(\r\n\t\t{\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\tz: z + 0.0,\r\n\t\t},\r\n\t\t1.0\r\n\t);\r\n\r\n\tcurrentBone = type;\r\n};\r\n\r\nRegisterNuiCallback(Receive.camMove, (data, cb) => {\r\n\tcb(1);\r\n\tlet heading: number = GetEntityHeading(ped);\r\n\tif (lastX == data.x) {\r\n\t\treturn;\r\n\t}\r\n\theading = data.x > lastX ? heading + 5 : heading - 5;\r\n\tSetEntityHeading(ped, heading);\r\n});\r\n\r\nRegisterNuiCallback(Receive.camScroll, (type: number, cb: Function) => {\r\n\tswitch (type) {\r\n\t\tcase 2:\r\n\t\t\tsetCamera();\r\n\t\t\tbreak;\r\n\t\tcase 1:\r\n\t\t\tsetCamera('legs');\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tsetCamera('head');\r\n\t\t\tbreak;\r\n\t}\r\n\tcb(1);\r\n});\r\n\r\nRegisterNuiCallback(Receive.camZoom, (data, cb) => {\r\n\tif (data === 'down') {\r\n\t\tconst newDistance: number = camDistance + 0.05;\r\n\t\tcamDistance = newDistance >= 1.0 ? 1.0 : newDistance;\r\n\t} else if (data === 'up') {\r\n\t\tconst newDistance: number = camDistance - 0.05;\r\n\t\tcamDistance = newDistance <= 0.35 ? 0.35 : newDistance;\r\n\t}\r\n\r\n\tcamDistance = camDistance;\r\n\tsetCamPosition();\r\n\tcb(1);\r\n});\r\n", "export default [\n    \"Blemishes\",\n    \"FacialHair\",\n    \"Eyebrows\",\n    \"Ageing\",\n    \"Makeup\",\n    \"Blush\",\n    \"Complexion\",\n    \"SunDamage\",\n    \"Lipstick\",\n    \"MolesFreckles\",\n    \"ChestHair\",\n    \"BodyBlemishes\",\n    \"AddBodyBlemishes\",\n    \"EyeColor\"\n]\n", "export default [\n    \"Nose_Width\",\n    \"Nose_Peak_Height\",\n    \"Nose_Peak_Lenght\",\n    \"Nose_Bone_Height\",\n    \"Nose_Peak_Lowering\",\n    \"Nose_Bone_Twist\",\n    \"EyeBrown_Height\",\n    \"EyeBrown_Forward\",\n    \"Cheeks_Bone_High\",\n    \"Cheeks_Bone_Width\",\n    \"Cheeks_Width\",\n    \"Eyes_Openning\",\n    \"Lips_Thickness\",\n    \"Jaw_Bone_Width\",\n    \"Jaw_Bone_Back_Lenght\",\n    \"Chin_Bone_Lowering\",\n    \"Chin_Bone_Length\",\n    \"Chin_Bone_Width\",\n    \"Chin_Hole\",\n    \"Neck_Thikness\"\n]\n", "export default [\n    \"face\",\n    \"masks\",\n    \"hair\",\n    \"torsos\",\n    \"legs\",\n    \"bags\",\n    \"shoes\",\n    \"neck\",\n    \"shirts\",\n    \"vest\",\n    \"decals\",\n    \"jackets\"\n]\n", "export default [\n    \"hats\",\n    \"glasses\",\n    \"earrings\",\n    \"mouth\",\n    \"lhand\",\n    \"rhand\",\n    \"watches\",\n    \"bracelets\"\n]\n", "import { TAppearance, THairData, THeadOverlay, THeadOverlayTotal } from \"@typings/appearance\"\r\nimport HEAD_OVERLAYS from \"@data/head\"\r\nimport FACE_FEATURES from \"@data/face\"\r\nimport DRAWABLE_NAMES from \"@data/drawables\"\r\nimport PROP_NAMES from \"@data/props\"\r\nimport { ped, onServerCallback } from '@utils';\r\n\r\nexport function findModelIndex(target: number) {\r\n    const config = exports.bl_appearance\r\n    const models = config.models()\r\n\r\n    return models.findIndex((model: string) => GetHashKey(model) === target)\r\n}\r\n\r\nexport function getHair(pedHandle: number): THairData {\r\n    return {\r\n        color: GetPedHairColor(pedHandle),\r\n        highlight: GetPedHairHighlightColor(pedHandle)\r\n    }\r\n}\r\n\r\nexport function getHeadBlendData(pedHandle: number) {\r\n    // https://github.com/pedr0fontoura/fivem-appearance/blob/main/game/src/client/index.ts#L67\r\n    const buffer = new ArrayBuffer(80);\r\n    global.Citizen.invokeNative('0x2746bd9d88c5c5d0', pedHandle, new Uint32Array(buffer));\r\n\r\n    const { 0: shapeFirst, 2: shapeSecond, 4: shapeThird, 6: skinFirst, 8: skinSecond, 18: hasParent, 10: skinThird } = new Uint32Array(buffer);\r\n    const { 0: shapeMix, 2: skinMix, 4: thirdMix } = new Float32Array(buffer, 48);\r\n\r\n    /*   \r\n        0: shapeFirst,\r\n        2: shapeSecond,\r\n        4: shapeThird,\r\n        6: skinFirst,\r\n        8: skinSecond,\r\n        10: skinThird,\r\n        18: hasParent,\r\n    */\r\n    return {\r\n        shapeFirst,   // father\r\n        shapeSecond, // mother\r\n        shapeThird,\r\n\r\n        skinFirst,\r\n        skinSecond,\r\n        skinThird,\r\n\r\n        shapeMix, // resemblance\r\n\r\n        thirdMix,\r\n        skinMix,   // skinpercent\r\n\r\n        hasParent: Boolean(hasParent),\r\n    };\r\n}\r\n\r\nexport function getHeadOverlay(pedHandle: number) {\r\n    let totals: THeadOverlayTotal = {};\r\n    let headData: THeadOverlay = {};\r\n\r\n    for (let i = 0; i < HEAD_OVERLAYS.length; i++) {\r\n        const overlay = HEAD_OVERLAYS[i];\r\n        totals[overlay] = GetNumHeadOverlayValues(i);\r\n\r\n        if (overlay === \"EyeColor\") {\r\n            headData[overlay] = {\r\n                id: overlay,\r\n                index: i,\r\n                overlayValue: GetPedEyeColor(pedHandle)\r\n            };\r\n        } else {\r\n            const [_, overlayValue, colourType, firstColor, secondColor, overlayOpacity] = GetPedHeadOverlayData(pedHandle, i);\r\n            headData[overlay] = {\r\n                id: overlay,\r\n                index: i - 1,\r\n                overlayValue: overlayValue === 255 ? -1 : overlayValue,\r\n                colourType: colourType,\r\n                firstColor: firstColor,\r\n                secondColor: secondColor,\r\n                overlayOpacity: overlayOpacity\r\n            };\r\n        }\r\n    }\r\n\r\n    return [headData, totals];\r\n}\r\n\r\nexport function getHeadStructure(pedHandle: number) {\r\n    const pedModel = GetEntityModel(pedHandle)\r\n\r\n    if (pedModel !== GetHashKey(\"mp_m_freemode_01\") && pedModel !== GetHashKey(\"mp_f_freemode_01\")) return\r\n\r\n    let faceStruct = {}\r\n    for (let i = 0; i < FACE_FEATURES.length; i++) {\r\n        const overlay = FACE_FEATURES[i]\r\n        faceStruct[overlay] = {\r\n            id: overlay,\r\n            index: i,\r\n            value: GetPedFaceFeature(pedHandle, i)\r\n        }\r\n    }\r\n\r\n    return faceStruct\r\n}\r\n\r\nexport function getDrawables(pedHandle: number) {\r\n    let drawables = {}\r\n    let totalDrawables = {}\r\n\r\n    for (let i = 0; i < DRAWABLE_NAMES.length; i++) {\r\n        const name = DRAWABLE_NAMES[i]\r\n        const current = GetPedDrawableVariation(pedHandle, i)\r\n\r\n        totalDrawables[name] = {\r\n            id: name,\r\n            index: i,\r\n            total: GetNumberOfPedDrawableVariations(pedHandle, i),\r\n            textures: GetNumberOfPedTextureVariations(pedHandle, i, current)\r\n        }\r\n        drawables[name] = {\r\n            id: name,\r\n            index: i,\r\n            value: GetPedDrawableVariation(pedHandle, i),\r\n            texture: GetPedTextureVariation(pedHandle, i)\r\n        }\r\n    }\r\n\r\n    return [drawables, totalDrawables]\r\n}\r\n\r\nexport function getProps(pedHandle: number) {\r\n    let props = {}\r\n    let totalProps = {}\r\n\r\n    for (let i = 0; i < PROP_NAMES.length; i++) {\r\n        const name = PROP_NAMES[i]\r\n        const current = GetPedPropIndex(pedHandle, i)\r\n\r\n        totalProps[name] = {\r\n            id: name,\r\n            index: i,\r\n            total: GetNumberOfPedPropDrawableVariations(pedHandle, i),\r\n            textures: GetNumberOfPedPropTextureVariations(pedHandle, i, current)\r\n        }\r\n\r\n        props[name] = {\r\n            id: name,\r\n            index: i,\r\n            value: GetPedPropIndex(pedHandle, i),\r\n            texture: GetPedPropTextureIndex(pedHandle, i)\r\n        }\r\n    }\r\n\r\n    return [props, totalProps]\r\n}\r\n\r\n\r\nexport async function getAppearance(pedHandle: number): Promise<TAppearance> {\r\n    const [headData, totals] = getHeadOverlay(pedHandle)\r\n    const [drawables, drawTotal] = getDrawables(pedHandle)\r\n    const [props, propTotal] = getProps(pedHandle)\r\n    const model = GetEntityModel(pedHandle)\r\n\r\n    return {\r\n        modelIndex: findModelIndex(model),\r\n        model: model,\r\n        hairColor: getHair(pedHandle),\r\n        headBlend: getHeadBlendData(pedHandle),\r\n        headOverlay: headData as THeadOverlay,\r\n        headOverlayTotal: totals as THeadOverlayTotal,\r\n        headStructure: getHeadStructure(pedHandle),\r\n        drawables: drawables,\r\n        props: props,\r\n        drawTotal: drawTotal,\r\n        propTotal: propTotal,\r\n        tattoos: []\r\n    }\r\n}\r\nexports(\"GetAppearance\", getAppearance)\r\nonServerCallback('bl_appearance:client:getAppearance', () => {\r\n    return getAppearance(ped)\r\n});\r\n\r\nexport function getPedClothes(pedHandle: number) {\r\n    const [drawables] = getDrawables(pedHandle)\r\n    const [props] = getProps(pedHandle)\r\n    const [headData] = getHeadOverlay(pedHandle)\r\n\r\n    return {\r\n        headOverlay: headData,\r\n        drawables: drawables,\r\n        props: props,\r\n    }\r\n}\r\nexports(\"GetPedClothes\", getPedClothes)\r\n\r\nexport function getPedSkin(pedHandle: number) {\r\n    return {\r\n        headBlend: getHeadBlendData(pedHandle),\r\n        headStructure: getHeadStructure(pedHandle),\r\n        hairColor: getHair(pedHandle),\r\n        model: GetEntityModel(pedHandle)\r\n    }\r\n}\r\nexports(\"GetPedSkin\", getPedSkin)\r\n\r\nexport function getTattooData() {\r\n    let tattooZones = {}\r\n\r\n    const [TATTOO_LIST, TATTOO_CATEGORIES] = exports.bl_appearance.tattoos()\r\n    for (let i = 0; i < TATTOO_CATEGORIES.length; i++) {\r\n        const category = TATTOO_CATEGORIES[i]\r\n        const zone = category.zone\r\n        const label = category.label\r\n        const index = category.index\r\n        tattooZones[index] = {\r\n            zone: zone,\r\n            label: label,\r\n            zoneIndex: index,\r\n            dlcs: []\r\n        }\r\n\r\n        for (let j = 0; j < TATTOO_LIST.length; j++) {\r\n            const dlcData = TATTOO_LIST[j]\r\n            tattooZones[index].dlcs.push({\r\n                label: dlcData.dlc,\r\n                dlcIndex: j,\r\n                tattoos: []\r\n            })\r\n        }\r\n    }\r\n\r\n    const isFemale = GetEntityModel(ped) === GetHashKey(\"mp_f_freemode_01\")\r\n\r\n    for (let i = 0; i < TATTOO_LIST.length; i++) {\r\n        const data = TATTOO_LIST[i]\r\n        const { dlc, tattoos } = data\r\n        const dlcHash = GetHashKey(dlc)\r\n        for (let j = 0; j < tattoos.length; j++) {\r\n            const tattooData = tattoos[j]\r\n            let tattoo = null\r\n\r\n            const lowerTattoo = tattooData.toLowerCase()\r\n            const isFemaleTattoo = lowerTattoo.includes(\"_f\")\r\n            if (isFemaleTattoo && isFemale) {\r\n                tattoo = tattooData\r\n            } else if (!isFemaleTattoo && !isFemale) {\r\n                tattoo = tattooData\r\n            }\r\n\r\n            let hash = null\r\n            let zone = -1\r\n\r\n            if (tattoo) {\r\n                hash = GetHashKey(tattoo)\r\n                zone = GetPedDecorationZoneFromHashes(dlcHash, hash)\r\n            }\r\n\r\n            if (zone !== -1 && hash) {\r\n                const zoneTattoos = tattooZones[zone].dlcs[i].tattoos\r\n\r\n                zoneTattoos.push({\r\n                    label: tattoo,\r\n                    hash: hash,\r\n                    zone: zone,\r\n                    dlc: dlc,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return tattooZones\r\n}\r\n\r\n//migration\r\n\r\nonServerCallback('bl_appearance:client:migration:setAppearance', (data: {type: string, data: any}) => {\r\n    if (data.type === 'fivem') exports['fivem-appearance'].setPlayerAppearance(data.data)\r\n    if (data.type === 'illenium') exports['illenium-appearance'].setPlayerAppearance(data.data)\r\n});", "\r\n\r\nexport default {\r\n    hats: {\r\n        type: \"prop\",\r\n        index: 0,\r\n    },\r\n    glasses: {\r\n        type: \"prop\",\r\n        index: 1,\r\n    },\r\n    masks: {\r\n        type: \"drawable\",\r\n        index: 1,\r\n        off: 0,\r\n    },\r\n    shirts: {\r\n        type: \"drawable\",\r\n        index: 8,\r\n        off: 15\r\n    },\r\n    jackets: {\r\n        type: \"drawable\",\r\n        index: 11,\r\n        off: 15,\r\n    },\r\n    legs: {\r\n        type: \"drawable\",\r\n        index: 4,\r\n        off: 11,\r\n    },\r\n    shoes: {\r\n        type: \"drawable\",\r\n        index: 6,\r\n        off: 13,\r\n    }\r\n}", "import { TValue } from \"@typings/appearance\";\r\nimport TOGGLE_INDEXES from \"@data/toggles\"\r\nimport { requestModel, ped, updatePed, delay} from '@utils';\r\n\r\nexport function setDrawable(pedHandle: number, data: TValue) {\r\n    SetPedComponentVariation(pedHandle, data.index, data.value, data.texture, 0)\r\n}\r\n\r\nexport function setProp(pedHandle: number, data: TValue) {\r\n    if (data.value === -1) {\r\n        ClearPedProp(pedHandle, data.index)\r\n        return\r\n    }\r\n\r\n    SetPedPropIndex(pedHandle, data.index, data.value, data.texture, false)\r\n}\r\n\r\nexport const setModel = async (model: number) => {\r\n    const modelHash = await requestModel(model)\r\n    SetPlayerModel(PlayerId(), modelHash)\r\n    SetModelAsNoLongerNeeded(modelHash)\r\n    const pedHandle = PlayerPedId()\r\n    updatePed(pedHandle)\r\n    SetPedDefaultComponentVariation(pedHandle)\r\n\r\n    if (modelHash === GetHashKey(\"mp_m_freemode_01\")) SetPedHeadBlendData(ped, 0, 0, 0, 0, 0, 0, 0, 0, 0, false)\r\n    else if (modelHash === GetHashKey(\"mp_f_freemode_01\")) SetPedHeadBlendData(ped, 45, 21, 0, 20, 15, 0, 0.3, 0.1, 0, false)\r\n}\r\n\r\nexport function SetFaceFeature(pedHandle: number, data: TValue) {\r\n    SetPedFaceFeature(pedHandle, data.index, data.value + 0.0)\r\n}\r\n\r\nconst isPositive = (val: number) => val >= 0 ? val : 0\r\n\r\nexport function setHeadBlend(pedHandle: number, data) {\r\n    const shapeFirst = isPositive(data.shapeFirst)\r\n    const shapeSecond = isPositive(data.shapeSecond)\r\n    const shapeThird = isPositive(data.shapeThird)\r\n    const skinFirst = isPositive(data.skinFirst)\r\n    const skinSecond = isPositive(data.skinSecond)\r\n    const skinThird = isPositive(data.skinThird)\r\n    const shapeMix = data.shapeMix + 0.0\r\n    const skinMix = data.skinMix + 0.0\r\n    const thirdMix = data.thirdMix + 0.0\r\n    const hasParent = data.hasParent\r\n\r\n    SetPedHeadBlendData(pedHandle, shapeFirst, shapeSecond, shapeThird, skinFirst, skinSecond, skinThird, shapeMix, skinMix,\r\n        thirdMix, hasParent)\r\n}\r\n\r\nexport function setHeadOverlay(pedHandle: number, data) {\r\n    const index = data.index\r\n\r\n    if (index === 13) {\r\n        SetPedEyeColor(pedHandle, data.value)\r\n        return\r\n    }\r\n\r\n    const value = data.overlayValue === -1 ? 255 : data.overlayValue\r\n\r\n    SetPedHeadOverlay(pedHandle, index, value, data.overlayOpacity + 0.0)\r\n    SetPedHeadOverlayColor(pedHandle, index, 1, data.firstColor, data.secondColor)\r\n}\r\n\r\n// function ResetToggles(data)\r\n//     local ped = cache.ped\r\n\r\n//     local drawables = data.drawables\r\n//     local props = data.props\r\n\r\n//     for toggleItem, toggleData in pairs(TOGGLE_INDEXES) do\r\n//         local toggleType = toggleData.type\r\n//         local index = toggleData.index\r\n\r\n//         if toggleType == \"drawable\" and drawables[toggleItem] then\r\n//             local currentDrawable = GetPedDrawableVariation(ped, index)\r\n//             if currentDrawable ~= drawables[toggleItem].value then\r\n//                 SetPedComponentVariation(ped, index, drawables[toggleItem].value, 0, 0)\r\n//             end\r\n//         elseif toggleType == \"prop\" and props[toggleItem] then\r\n//             local currentProp = GetPedPropIndex(ped, index)\r\n//             if currentProp ~= props[toggleItem].value then\r\n//                 SetPedPropIndex(ped, index, props[toggleItem].value, 0, false)\r\n//             end\r\n//         end\r\n//     end\r\n// end\r\n\r\nexport function resetToggles(data) {\r\n    const drawables = data.drawables\r\n    const props = data.props\r\n\r\n    for (const [toggleItem, toggleData] of Object.entries(TOGGLE_INDEXES)) {\r\n        const toggleType = toggleData.type\r\n        const index = toggleData.index\r\n\r\n        if (toggleType === \"drawable\" && drawables[toggleItem]) {\r\n            const currentDrawable = GetPedDrawableVariation(ped, index)\r\n            if (currentDrawable !== drawables[toggleItem].value) {\r\n                SetPedComponentVariation(ped, index, drawables[toggleItem].value, 0, 0)\r\n            }\r\n        } else if (toggleType === \"prop\" && props[toggleItem]) {\r\n            const currentProp = GetPedPropIndex(ped, index)\r\n            if (currentProp !== props[toggleItem].value) {\r\n                SetPedPropIndex(ped, index, props[toggleItem].value, 0, false)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function setPedClothes(pedHandle: number, data) {\r\n    const drawables = data.drawables\r\n    const props = data.props\r\n    const headOverlay = data.headOverlay\r\n    for (const id in drawables) {\r\n        const drawable = drawables[id]\r\n        setDrawable(pedHandle, drawable)\r\n    }\r\n\r\n    for (const id in props) {\r\n        const prop = props[id]\r\n        setProp(pedHandle, prop)\r\n    }\r\n\r\n    for (const id in headOverlay) {\r\n        const overlay = headOverlay[id]\r\n        setHeadOverlay(pedHandle, overlay)\r\n    }\r\n}\r\n\r\nexport const setPedSkin = async (data) => {\r\n    const headStructure = data.headStructure\r\n    const headBlend = data.headBlend\r\n\r\n    await setModel(data.model)\r\n\r\n    if (headBlend) setHeadBlend(ped, headBlend)\r\n    \r\n    if (headStructure) for (const feature in headStructure) {\r\n        const value = headStructure[feature]\r\n        SetFaceFeature(ped, value)\r\n    }\r\n}\r\n\r\nexport function setPedTattoos(pedHandle: number, data) {\r\n    if (!data) return\r\n\r\n    ClearPedDecorationsLeaveScars(pedHandle)\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        const tattooData = data[i].tattoo\r\n        if (tattooData) {\r\n            const collection = GetHashKey(tattooData.dlc)\r\n            const tattoo = tattooData.hash\r\n            AddPedDecorationFromHashes(pedHandle, collection, tattoo)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setPedHairColors(pedHandle: number, data) {\r\n    const color = data.color\r\n    const highlight = data.highlight\r\n    SetPedHairColor(pedHandle, color, highlight)\r\n}\r\n\r\nexport async function setPedAppearance(pedHandle: number, data) {\r\n    await setPedSkin(data)\r\n    setPedClothes(pedHandle, data)\r\n    setPedHairColors(pedHandle, data.hairColor)\r\n    setPedTattoos(pedHandle, data.tattoos)\r\n}\r\n\r\nexport async function setPlayerPedAppearance(data) {\r\n    await setPedSkin(data)\r\n    setPedClothes(ped, data)\r\n    setPedHairColors(ped, data.hairColor)\r\n    setPedTattoos(ped, data.tattoos)\r\n}", "import { Receive } from '@events';\r\nimport {\r\n\tresetToggles,\r\n\tsetDrawable,\r\n\tSetFaceFeature,\r\n\tsetHeadBlend,\r\n\tsetHeadOverlay,\r\n\tsetModel,\r\n\tsetPedClothes,\r\n\tsetPedTattoos,\r\n\tsetPlayerPedAppearance,\r\n\tsetProp,\r\n} from './appearance/setters';\r\nimport { closeMenu } from './menu';\r\nimport { TAppearance, TToggleData, TValue } from '@typings/appearance';\r\nimport { delay, getFrameworkID, triggerServerCallback, ped } from '@utils';\r\nimport { getAppearance, getTattooData } from './appearance/getters';\r\nimport TOGGLE_INDEXES from '@data/toggles';\r\nimport { Outfit } from '@typings/outfits';\r\n\r\nRegisterNuiCallback(Receive.cancel, async (appearance: TAppearance, cb: Function) => {\r\n\tawait setPlayerPedAppearance(appearance);\r\n\tcloseMenu();\r\n\tcb(1);\r\n});\r\n\r\nRegisterNuiCallback(Receive.save, async (appearance: TAppearance, cb: Function) => {\r\n\tresetToggles(appearance);\r\n\r\n\tawait delay(100);\r\n\r\n\tconst newAppearance = await getAppearance(ped);\r\n\tnewAppearance.tattoos = appearance.tattoos;\r\n\ttriggerServerCallback('bl_appearance:server:saveAppearance', getFrameworkID(), newAppearance);\r\n\r\n\tsetPedTattoos(ped, newAppearance.tattoos);\r\n\r\n\tcloseMenu();\r\n\tcb(1);\r\n});\r\n\r\nRegisterNuiCallback(Receive.setModel, async (model: string, cb: Function) => {\r\n\tconst hash = GetHashKey(model);\r\n\tif (!IsModelInCdimage(hash) || !IsModelValid(hash)) {\r\n\t\treturn cb(0);\r\n\t}\r\n\r\n\tawait setModel(hash);\r\n\r\n\tconst appearance = await getAppearance(ped);\r\n\r\n\tappearance.tattoos = [];\r\n\r\n\tsetPedTattoos(ped, []);\r\n\r\n\tcb(appearance);\r\n});\r\n\r\nRegisterNuiCallback(Receive.getModelTattoos, async (_: any, cb: Function) => {\r\n\tconst tattoos = getTattooData();\r\n\r\n\tcb(tattoos);\r\n});\r\n\r\nRegisterNuiCallback(Receive.setHeadStructure, async (data: TValue, cb: Function) => {\r\n\tSetFaceFeature(ped, data);\r\n\tcb(1);\r\n});\r\n\r\nRegisterNuiCallback(Receive.setHeadOverlay, async (data: TValue, cb: Function) => {\r\n\tsetHeadOverlay(ped, data);\r\n\tcb(1);\r\n});\r\n\r\nRegisterNuiCallback(Receive.setHeadBlend, async (data: TValue, cb: Function) => {\r\n\tsetHeadBlend(ped, data);\r\n\tcb(1);\r\n});\r\n\r\nRegisterNuiCallback(Receive.setTattoos, async (data: TValue, cb: Function) => {\r\n\tsetPedTattoos(ped, data);\r\n\tcb(1);\r\n});\r\n\r\nRegisterNuiCallback(Receive.setProp, async (data: TValue, cb: Function) => {\r\n\tsetProp(ped, data);\r\n\tcb(1);\r\n});\r\n\r\nRegisterNuiCallback(Receive.setDrawable, async (data: TValue, cb: Function) => {\r\n\tsetDrawable(ped, data);\r\n\tcb(1);\r\n});\r\n\r\nRegisterNuiCallback(Receive.toggleItem, async (data: TToggleData, cb: Function) => {\r\n\tconst item = TOGGLE_INDEXES[data.item];\r\n\tif (!item) return cb(false);\r\n\r\n\tconst current = data.data;\r\n\tconst type = item.type;\r\n\tconst index = item.index;\r\n\r\n\tif (!current) return cb(false);\r\n\r\n\tif (type === 'prop') {\r\n\t\tconst currentProp = GetPedPropIndex(ped, index);\r\n\r\n\t\tif (currentProp === -1) {\r\n\t\t\tsetProp(ped, current);\r\n\t\t\tcb(false);\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tClearPedProp(ped, index);\r\n\t\t\tcb(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t} else if (type === 'drawable') {\r\n\t\tconst currentDrawable = GetPedDrawableVariation(ped, index);\r\n\r\n\t\tif (current.value === item.off) {\r\n\t\t\tcb(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (current.value === currentDrawable) {\r\n\t\t\tSetPedComponentVariation(ped, index, item.off, 0, 0);\r\n\t\t\tcb(true);\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tsetDrawable(ped, current);\r\n\t\t\tcb(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\n);\r\n\r\nRegisterNuiCallback(Receive.saveOutfit, async (data: any, cb: Function) => {\r\n\tconst frameworkdId = getFrameworkID();\r\n\tconst result = await triggerServerCallback('bl_appearance:server:saveOutfit', frameworkdId, data);\r\n\tcb(result);\r\n});\r\n\r\nRegisterNuiCallback(Receive.deleteOutfit, async ({id}, cb: Function) => {\r\n\tconst frameworkdId = getFrameworkID();\r\n\tconst result = await triggerServerCallback('bl_appearance:server:deleteOutfit', frameworkdId, id);\r\n\tcb(result);\r\n});\r\n\r\nRegisterNuiCallback(Receive.renameOutfit, async (data: any, cb: Function) => {\r\n\tconst frameworkdId = getFrameworkID();\r\n\tconst result = await triggerServerCallback('bl_appearance:server:renameOutfit', frameworkdId, data);\r\n\tcb(result);\r\n});\r\n\r\nRegisterNuiCallback(Receive.useOutfit, async (outfit: Outfit, cb: Function) => {\r\n\tsetPedClothes(ped, outfit);\r\n\tcb(1);\r\n});", "import { getFrameworkID, requestLocale, sendNUIEvent, triggerServerCallback, updatePed, delay, ped, getPlayerData } from \"@utils\"\r\nimport { startCamera, stopCamera } from \"./camera\"\r\nimport type { TAppearanceZone, TMenuTypes } from \"@typings/appearance\"\r\nimport { Outfit } from \"@typings/outfits\"\r\nimport { Send } from \"@events\"\r\nimport { getAppearance, getTattooData } from \"./appearance/getters\"\r\nimport \"./handlers\"\r\n\r\nconst config = exports.bl_appearance\r\nlet armour = 0\r\n\r\nexport async function openMenu(zone: TAppearanceZone, creation: boolean = false) {\r\n    const pedHandle = PlayerPedId()\r\n    const configMenus = config.menus()\r\n\r\n    const type = zone.type\r\n\r\n    const menu = configMenus[type]\r\n    if (!menu) return\r\n\r\n    updatePed(pedHandle)\r\n    startCamera()\r\n\r\n    const frameworkdId = getFrameworkID()\r\n    const tabs = menu.tabs\r\n    let allowExit = menu.allowExit\r\n\r\n    armour = GetPedArmour(pedHandle)\r\n\r\n    let outfits = []\r\n\r\n    const hasOutfitTab = tabs.includes('outfits')\r\n    if (hasOutfitTab) outfits = await triggerServerCallback<Outfit[]>('bl_appearance:server:getOutfits', frameworkdId) as Outfit[]\r\n\r\n    let models = []\r\n\r\n    const hasHeritageTab = tabs.includes('heritage')\r\n    if (hasHeritageTab) {\r\n        models = config.models()\r\n    }\r\n\r\n    const hasTattooTab = tabs.includes('tattoos')\r\n    let tattoos\r\n    if (hasTattooTab) {\r\n        tattoos = getTattooData()\r\n    }\r\n\r\n    const blacklist = getBlacklist(zone)\r\n\r\n    const appearance = await getAppearance(pedHandle)\r\n\r\n    if (creation) {\r\n        allowExit = false\r\n    }\r\n\r\n    sendNUIEvent(Send.data, {\r\n        tabs,\r\n        appearance,\r\n        blacklist,\r\n        tattoos,\r\n        outfits,\r\n        models,\r\n        allowExit,\r\n        locale: await requestLocale('locale')\r\n    })\r\n    SetNuiFocus(true, true)\r\n    sendNUIEvent(Send.visible, true)\r\n}\r\n\r\nfunction getBlacklist(zone: TAppearanceZone) {\r\n    if (!zone) return {}\r\n\r\n    const {groupTypes, base} = config.blacklist()\r\n\r\n    if (!groupTypes) return {}\r\n    if (!base) return {}\r\n\r\n    let blacklist = {...base}\r\n\r\n    const playerData = getPlayerData()\r\n\r\n\r\n    for (const type in groupTypes) {\r\n        const groups = groupTypes[type]\r\n        for (const group in groups) {\r\n\r\n            let skip: boolean = false\r\n            \r\n            if (type == 'jobs' && zone.jobs) {\r\n                skip = zone.jobs.includes(playerData.job.name)\r\n            }\r\n\r\n            if (type == 'gangs' && zone.gangs) {\r\n                skip = zone.gangs.includes(playerData.gang.name)\r\n            }\r\n\r\n            // if (type == 'groups' && zone.groups) {\r\n            //     skip = !zone.groups.includes(playerData.group.name)\r\n            // }\r\n\r\n            if (!skip) {\r\n                const groupBlacklist = groups[group]\r\n                blacklist = Object.assign({}, blacklist, groupBlacklist, {\r\n                  drawables: Object.assign({}, blacklist.drawables, groupBlacklist.drawables)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return blacklist\r\n\r\n    // return blacklist\r\n}\r\n\r\nexport function closeMenu() {\r\n    SetPedArmour(ped, armour)\r\n\r\n    stopCamera()\r\n    SetNuiFocus(false, false)\r\n    sendNUIEvent(Send.visible, false)\r\n}", "import { TAppearance, TAppearanceZone, TMenuTypes } from \"@typings/appearance\"\r\nimport { openMenu } from \"./menu\"\r\nimport { setPedAppearance, setPlayerPedAppearance } from \"./appearance/setters\"\r\nimport { triggerServerCallback } from \"@utils\"\r\n\r\nRegisterCommand('openMenu', () => {\r\n    openMenu({ type: \"appearance\", coords: [0, 0, 0, 0] })  \r\n  }, false)\r\n\r\n\r\nexports('SetPedAppearance', async (ped: number, appearance: TAppearance) => {\r\n    await setPedAppearance(ped, appearance)\r\n})\r\n\r\nexports('SetPlayerPedAppearance', async (frameworkID) => {\r\n    const appearance = await triggerServerCallback<TAppearance>('bl_appearance:server:getAppearance', frameworkID)\r\n    await setPlayerPedAppearance(appearance)\r\n})\r\n\r\nexports('GetPlayerPedAppearance', async (frameworkID) => {\r\n    return await triggerServerCallback<TAppearance>('bl_appearance:server:getAppearance', frameworkID)\r\n})\r\n\r\non('bl_sprites:client:useZone', (zone: TAppearanceZone) => {\r\n    openMenu(zone)\r\n})"],
  "mappings": ";;;;AAAO,IAAI,MAAM;AAEV,IAAM,YAAY,wBAAC,cAAsB;AAC5C,QAAM;AACV,GAFyB;AAalB,IAAM,eAAe,wBAAC,QAAgB,SAAc;AACvD,iBAAe;AAAA,IACX;AAAA,IACA;AAAA,EACJ,CAAC;AACL,GAL4B;AAOrB,IAAM,QAAQ,wBAAC,OAAe,IAAI,QAAQ,SAAO,WAAW,KAAK,EAAE,CAAC,GAAtD;AAEd,IAAM,eAAe,8BAAO,UAA4C;AAC3E,MAAI,YAAoB,OAAO,UAAU,WAAW,QAAQ,WAAW,KAAK;AAE5E,MAAI,CAAC,aAAa,SAAS,GAAG;AAC1B,YAAQ,UAAU,OAAO,EAAE;AAAA,MACvB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACd,CAAC;AAED,UAAM,IAAI,MAAM,oCAAoC,KAAK,GAAG;AAAA,EAChE;AAEA,MAAI,eAAe,SAAS;AAAG,WAAO;AAEtC,eAAa,SAAS;AAEtB,QAAM,qBAAqB,6BAAqB;AAC5C,WAAO,IAAI,QAAQ,aAAW;AAC1B,YAAM,WAAW,YAAY,MAAM;AAC/B,YAAI,eAAe,SAAS,GAAG;AAC3B,wBAAc,QAAQ;AACtB,kBAAQ;AAAA,QACZ;AAAA,MACJ,GAAG,GAAG;AAAA,IACV,CAAC;AAAA,EACL,GAT2B;AAW3B,QAAM,mBAAmB;AAEzB,SAAO;AACX,GA/B4B;AAqC5B,IAAM,eAAe,uBAAuB;AAC5C,IAAM,cAAsC,CAAC;AAC7C,IAAM,eAAyD,CAAC;AAEhE,SAAS,WAAW,WAAmBA,QAAsB;AACzD,MAAIA,UAASA,SAAQ,GAAG;AACpB,UAAM,cAAc,aAAa;AAEjC,SAAK,YAAY,SAAS,KAAK,KAAK;AAAa,aAAO;AAExD,gBAAY,SAAS,IAAI,cAAcA;AAAA,EAC3C;AAEA,SAAO;AACX;AAVS;AAYT,MAAM,WAAW,YAAY,IAAI,CAAC,QAAgB,SAAc;AAC5D,QAAM,UAAU,aAAa,GAAG;AAChC,SAAO,WAAW,QAAQ,GAAG,IAAI;AACrC,CAAC;AAEM,SAAS,sBACZ,cAAsB,MACL;AACjB,MAAI,CAAC,WAAW,WAAW,CAAC,GAAG;AAC3B;AAAA,EACJ;AAEA,MAAI;AAEJ,KAAG;AACC,UAAM,GAAG,SAAS,IAAI,KAAK,MAAM,KAAK,OAAO,KAAK,MAAS,EAAE,CAAC;AAAA,EAClE,SAAS,aAAa,GAAG;AAEzB,UAAQ,WAAW,SAAS,IAAI,cAAc,KAAK,GAAG,IAAI;AAE1D,SAAO,IAAI,QAAW,CAAC,YAAY;AAC/B,iBAAa,GAAG,IAAI;AAAA,EACxB,CAAC;AACL;AAlBgB;AAoBT,SAAS,iBAAiB,WAAW,IAAI;AAC5C,QAAM,WAAW,SAAS,IAAI,OAAO,UAAU,QAAQ,SAAS;AAC5D,QAAI;AACJ,QAAI;AACA,iBAAW,MAAM,GAAG,GAAG,IAAI;AAAA,IAC/B,SACO,GAAG;AACN,cAAQ,MAAM,mDAAmD,SAAS,EAAE;AAC5E,cAAQ,IAAI,KAAK,EAAE,KAAK,IAAI;AAAA,IAChC;AACA,YAAQ,WAAW,QAAQ,IAAI,KAAK,QAAQ;AAAA,EAChD,CAAC;AACL;AAZgB;AAgBT,IAAM,gBAAgB,wBAAC,oBAA4B;AACtD,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC5B,UAAM,oBAAoB,6BAAM;AAC5B,UAAI,uBAAuB,eAAe,GAAG;AACzC,cAAM,aAAa,QAAQ,cAAc,OAAO,EAAE;AAClD,YAAI,oBAAoB,iBAAiB,cAAc,UAAU,UAAU,OAAO;AAClF,YAAI,CAAC,mBAAmB;AACpB,kBAAQ,MAAM,GAAG,UAAU,qEAAqE;AAChG,8BAAoB,iBAAiB,cAAc,gBAAgB;AAAA,QACvE;AACA,gBAAQ,iBAAiB;AAAA,MAC7B,OAAO;AACH,mBAAW,mBAAmB,GAAG;AAAA,MACrC;AAAA,IACJ,GAZ0B;AAa1B,sBAAkB;AAAA,EACtB,CAAC;AACL,GAjB6B;AA2BtB,IAAM,YAAY,QAAQ;AAE1B,IAAM,gBAAgB,6BAAM;AAC/B,SAAO,UAAU,KAAK,EAAE,cAAc;AAC1C,GAF6B;AAItB,IAAM,iBAAiB,6BAAM;AAChC,QAAM,KAAK,cAAc,EAAE;AAC3B,SAAO;AACX,GAH8B;;;ACnJ9B,IAAI,UAAmB;AACvB,IAAI,cAAsB;AAC1B,IAAI,MAAqB;AACzB,IAAI,SAAiB;AACrB,IAAI,SAAiB;AACrB,IAAI,eAA+B;AACnC,IAAI,SAAwB;AAC5B,IAAI,cAAuB;AAC3B,IAAI,QAAgB;AACpB,IAAI,cAAiC;AAErC,IAAM,cAA2B;AAAA,EAChC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AACP;AAEA,IAAM,MAAM,wBAAC,YAA4B;AACxC,SAAO,KAAK,IAAK,UAAU,KAAK,KAAM,GAAG;AAC1C,GAFY;AAIZ,IAAM,MAAM,wBAAC,YAA4B;AACxC,SAAO,KAAK,IAAK,UAAU,KAAK,KAAM,GAAG;AAC1C,GAFY;AAIZ,IAAM,YAAY,6BAAgB;AACjC,QAAM,KACH,IAAI,MAAM,IAAI,IAAI,MAAM,IAAI,IAAI,MAAM,IAAI,IAAI,MAAM,KAAK,IAC3D;AACD,QAAM,KACH,IAAI,MAAM,IAAI,IAAI,MAAM,IAAI,IAAI,MAAM,IAAI,IAAI,MAAM,KAAK,IAC3D;AACD,QAAM,IAAI,IAAI,MAAM,IAAI;AAExB,SAAO,CAAC,GAAG,GAAG,CAAC;AAChB,GAVkB;AAYlB,IAAM,iBAAiB,wBAAC,QAAiB,WAA0B;AAClE,MAAI,CAAC,WAAW,CAAC,gBAAgB;AAAa;AAE9C,WAAS,UAAU;AACnB,WAAS,UAAU;AAEnB,YAAU;AACV,YAAU;AACV,WAAS,KAAK,IAAI,KAAK,IAAI,QAAQ,CAAG,GAAG,EAAI;AAE7C,QAAM,CAAC,GAAG,GAAG,CAAC,IAAI,UAAU;AAE5B;AAAA,IACC;AAAA,IACA,aAAa,IAAI;AAAA,IACjB,aAAa,IAAI;AAAA,IACjB,aAAa,IAAI;AAAA,EAClB;AACA,kBAAgB,KAAK,aAAa,GAAG,aAAa,GAAG,aAAa,CAAC;AACpE,GAnBuB;AAqBvB,IAAM,aAAa,8BAAO,QAAiB,aAAsB;AAChE,QAAM,UAAkB,iBAAiB,GAAG,IAAI;AAChD,aAAW,YAAY;AAEvB,gBAAc;AACd,gBAAc;AACd,WAAS;AAET,QAAM,CAAC,GAAG,GAAG,CAAC,IAAI,UAAU;AAE5B,QAAM,SAAiB;AAAA,IACtB;AAAA,IACA,OAAO,IAAI;AAAA,IACX,OAAO,IAAI;AAAA,IACX,OAAO,IAAI;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAEA,iBAAe;AACf,gBAAc;AACd,WAAS;AACT,QAAM;AAEN,kBAAgB,QAAQ,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;AACpD,yBAAuB,QAAQ,QAAQ,KAAK,GAAG,CAAC;AAEhD,QAAM,MAAM,GAAG;AAEf,0BAAwB,QAAQ,IAAI;AACpC,gBAAc,QAAQ,GAAG;AACzB,eAAa,QAAQ,GAAG;AACxB,oBAAkB,QAAQ,GAAG;AAC7B,WAAS,MAAM;AAEf,aAAW,QAAQ,IAAI;AACxB,GAxCmB;AA0CnB,IAAM,WAAW,wBAAC,eAAuB;AACxC,MAAI,EAAE,aAAa,GAAG,KAAK,cAAc;AAAM;AAC/C,cAAY;AACZ,aAAW,UAAU,CAAC;AACvB,GAJiB;AAMV,IAAM,cAAc,6BAAM;AAChC,MAAI;AAAS;AACb,YAAU;AACV,gBAAc;AACd,QAAM,UAAU,2BAA2B,IAAI;AAC/C,QAAM,CAAC,GAAG,GAAG,CAAC,IAAc,iBAAiB,KAAK,OAAO,GAAK,GAAK,CAAG;AACtE,cAAY,KAAK,GAAG,GAAG,CAAC;AACxB,mBAAiB,MAAM,MAAM,KAAM,MAAM,IAAI;AAC7C,aAAW,EAAE,GAAM,GAAM,EAAK,GAAG,WAAW;AAC7C,GAT2B;AAWpB,IAAM,aAAa,6BAAY;AACrC,MAAI,CAAC;AAAS;AACd,YAAU;AAEV,mBAAiB,OAAO,MAAM,KAAK,MAAM,KAAK;AAC9C,aAAW,KAAK,IAAI;AACpB,QAAM;AACN,iBAAe;AAChB,GAR0B;AAU1B,IAAM,YAAY,wBAAC,SAAmC;AACrD,QAAM,OAA2B,YAAY,IAAI;AACjD,MAAI,eAAe;AAAM;AAEzB,QAAM,CAAC,GAAG,GAAG,CAAC,IAAc,OACzB,iBAAiB,KAAK,MAAM,GAAK,GAAK,SAAS,QAAQ,MAAM,CAAG,IAChE,gBAAgB,KAAK,KAAK;AAE7B;AAAA,IACC;AAAA,MACC;AAAA,MACA;AAAA,MACA,GAAG,IAAI;AAAA,IACR;AAAA,IACA;AAAA,EACD;AAEA,gBAAc;AACf,GAlBkB;AAoBlB,wDAAqC,CAAC,MAAM,OAAO;AAClD,KAAG,CAAC;AACJ,MAAI,UAAkB,iBAAiB,GAAG;AAC1C,MAAI,SAAS,KAAK,GAAG;AACpB;AAAA,EACD;AACA,YAAU,KAAK,IAAI,QAAQ,UAAU,IAAI,UAAU;AACnD,mBAAiB,KAAK,OAAO;AAC9B,CAAC;AAED,4DAAuC,CAAC,MAAc,OAAiB;AACtE,UAAQ,MAAM;AAAA,IACb,KAAK;AACJ,gBAAU;AACV;AAAA,IACD,KAAK;AACJ,gBAAU,MAAM;AAChB;AAAA,IACD,KAAK;AACJ,gBAAU,MAAM;AAChB;AAAA,EACF;AACA,KAAG,CAAC;AACL,CAAC;AAED,wDAAqC,CAAC,MAAM,OAAO;AAClD,MAAI,SAAS,QAAQ;AACpB,UAAM,cAAsB,cAAc;AAC1C,kBAAc,eAAe,IAAM,IAAM;AAAA,EAC1C,WAAW,SAAS,MAAM;AACzB,UAAM,cAAsB,cAAc;AAC1C,kBAAc,eAAe,OAAO,OAAO;AAAA,EAC5C;AAEA,gBAAc;AACd,iBAAe;AACf,KAAG,CAAC;AACL,CAAC;;;AC5LD,IAAO,eAAQ;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;;;ACfA,IAAO,eAAQ;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;;;ACrBA,IAAO,oBAAQ;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;;;ACbA,IAAO,gBAAQ;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;;;ACFO,SAAS,eAAe,QAAgB;AAC3C,QAAMC,UAAS,QAAQ;AACvB,QAAM,SAASA,QAAO,OAAO;AAE7B,SAAO,OAAO,UAAU,CAAC,UAAkB,WAAW,KAAK,MAAM,MAAM;AAC3E;AALgB;AAOT,SAAS,QAAQ,WAA8B;AAClD,SAAO;AAAA,IACH,OAAO,gBAAgB,SAAS;AAAA,IAChC,WAAW,yBAAyB,SAAS;AAAA,EACjD;AACJ;AALgB;AAOT,SAAS,iBAAiB,WAAmB;AAEhD,QAAM,SAAS,IAAI,YAAY,EAAE;AACjC,SAAO,QAAQ,aAAa,sBAAsB,WAAW,IAAI,YAAY,MAAM,CAAC;AAEpF,QAAM,EAAE,GAAG,YAAY,GAAG,aAAa,GAAG,YAAY,GAAG,WAAW,GAAG,YAAY,IAAI,WAAW,IAAI,UAAU,IAAI,IAAI,YAAY,MAAM;AAC1I,QAAM,EAAE,GAAG,UAAU,GAAG,SAAS,GAAG,SAAS,IAAI,IAAI,aAAa,QAAQ,EAAE;AAW5E,SAAO;AAAA,IACH;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA,IACA;AAAA;AAAA,IAEA,WAAW,QAAQ,SAAS;AAAA,EAChC;AACJ;AAjCgB;AAmCT,SAAS,eAAe,WAAmB;AAC9C,MAAI,SAA4B,CAAC;AACjC,MAAI,WAAyB,CAAC;AAE9B,WAAS,IAAI,GAAG,IAAI,aAAc,QAAQ,KAAK;AAC3C,UAAM,UAAU,aAAc,CAAC;AAC/B,WAAO,OAAO,IAAI,wBAAwB,CAAC;AAE3C,QAAI,YAAY,YAAY;AACxB,eAAS,OAAO,IAAI;AAAA,QAChB,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,cAAc,eAAe,SAAS;AAAA,MAC1C;AAAA,IACJ,OAAO;AACH,YAAM,CAAC,GAAG,cAAc,YAAY,YAAY,aAAa,cAAc,IAAI,sBAAsB,WAAW,CAAC;AACjH,eAAS,OAAO,IAAI;AAAA,QAChB,IAAI;AAAA,QACJ,OAAO,IAAI;AAAA,QACX,cAAc,iBAAiB,MAAM,KAAK;AAAA,QAC1C;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,SAAO,CAAC,UAAU,MAAM;AAC5B;AA7BgB;AA+BT,SAAS,iBAAiB,WAAmB;AAChD,QAAM,WAAW,eAAe,SAAS;AAEzC,MAAI,aAAa,WAAW,kBAAkB,KAAK,aAAa,WAAW,kBAAkB;AAAG;AAEhG,MAAI,aAAa,CAAC;AAClB,WAAS,IAAI,GAAG,IAAI,aAAc,QAAQ,KAAK;AAC3C,UAAM,UAAU,aAAc,CAAC;AAC/B,eAAW,OAAO,IAAI;AAAA,MAClB,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,OAAO,kBAAkB,WAAW,CAAC;AAAA,IACzC;AAAA,EACJ;AAEA,SAAO;AACX;AAhBgB;AAkBT,SAAS,aAAa,WAAmB;AAC5C,MAAI,YAAY,CAAC;AACjB,MAAI,iBAAiB,CAAC;AAEtB,WAAS,IAAI,GAAG,IAAI,kBAAe,QAAQ,KAAK;AAC5C,UAAM,OAAO,kBAAe,CAAC;AAC7B,UAAM,UAAU,wBAAwB,WAAW,CAAC;AAEpD,mBAAe,IAAI,IAAI;AAAA,MACnB,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,OAAO,iCAAiC,WAAW,CAAC;AAAA,MACpD,UAAU,gCAAgC,WAAW,GAAG,OAAO;AAAA,IACnE;AACA,cAAU,IAAI,IAAI;AAAA,MACd,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,OAAO,wBAAwB,WAAW,CAAC;AAAA,MAC3C,SAAS,uBAAuB,WAAW,CAAC;AAAA,IAChD;AAAA,EACJ;AAEA,SAAO,CAAC,WAAW,cAAc;AACrC;AAvBgB;AAyBT,SAAS,SAAS,WAAmB;AACxC,MAAI,QAAQ,CAAC;AACb,MAAI,aAAa,CAAC;AAElB,WAAS,IAAI,GAAG,IAAI,cAAW,QAAQ,KAAK;AACxC,UAAM,OAAO,cAAW,CAAC;AACzB,UAAM,UAAU,gBAAgB,WAAW,CAAC;AAE5C,eAAW,IAAI,IAAI;AAAA,MACf,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,OAAO,qCAAqC,WAAW,CAAC;AAAA,MACxD,UAAU,oCAAoC,WAAW,GAAG,OAAO;AAAA,IACvE;AAEA,UAAM,IAAI,IAAI;AAAA,MACV,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,OAAO,gBAAgB,WAAW,CAAC;AAAA,MACnC,SAAS,uBAAuB,WAAW,CAAC;AAAA,IAChD;AAAA,EACJ;AAEA,SAAO,CAAC,OAAO,UAAU;AAC7B;AAxBgB;AA2BhB,eAAsB,cAAc,WAAyC;AACzE,QAAM,CAAC,UAAU,MAAM,IAAI,eAAe,SAAS;AACnD,QAAM,CAAC,WAAW,SAAS,IAAI,aAAa,SAAS;AACrD,QAAM,CAAC,OAAO,SAAS,IAAI,SAAS,SAAS;AAC7C,QAAM,QAAQ,eAAe,SAAS;AAEtC,SAAO;AAAA,IACH,YAAY,eAAe,KAAK;AAAA,IAChC;AAAA,IACA,WAAW,QAAQ,SAAS;AAAA,IAC5B,WAAW,iBAAiB,SAAS;AAAA,IACrC,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,eAAe,iBAAiB,SAAS;AAAA,IACzC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS,CAAC;AAAA,EACd;AACJ;AApBsB;AAqBtB,QAAQ,iBAAiB,aAAa;AACtC,iBAAiB,sCAAsC,MAAM;AACzD,SAAO,cAAc,GAAG;AAC5B,CAAC;AAEM,SAAS,cAAc,WAAmB;AAC7C,QAAM,CAAC,SAAS,IAAI,aAAa,SAAS;AAC1C,QAAM,CAAC,KAAK,IAAI,SAAS,SAAS;AAClC,QAAM,CAAC,QAAQ,IAAI,eAAe,SAAS;AAE3C,SAAO;AAAA,IACH,aAAa;AAAA,IACb;AAAA,IACA;AAAA,EACJ;AACJ;AAVgB;AAWhB,QAAQ,iBAAiB,aAAa;AAE/B,SAAS,WAAW,WAAmB;AAC1C,SAAO;AAAA,IACH,WAAW,iBAAiB,SAAS;AAAA,IACrC,eAAe,iBAAiB,SAAS;AAAA,IACzC,WAAW,QAAQ,SAAS;AAAA,IAC5B,OAAO,eAAe,SAAS;AAAA,EACnC;AACJ;AAPgB;AAQhB,QAAQ,cAAc,UAAU;AAEzB,SAAS,gBAAgB;AAC5B,MAAI,cAAc,CAAC;AAEnB,QAAM,CAAC,aAAa,iBAAiB,IAAI,QAAQ,cAAc,QAAQ;AACvE,WAAS,IAAI,GAAG,IAAI,kBAAkB,QAAQ,KAAK;AAC/C,UAAM,WAAW,kBAAkB,CAAC;AACpC,UAAM,OAAO,SAAS;AACtB,UAAM,QAAQ,SAAS;AACvB,UAAM,QAAQ,SAAS;AACvB,gBAAY,KAAK,IAAI;AAAA,MACjB;AAAA,MACA;AAAA,MACA,WAAW;AAAA,MACX,MAAM,CAAC;AAAA,IACX;AAEA,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AACzC,YAAM,UAAU,YAAY,CAAC;AAC7B,kBAAY,KAAK,EAAE,KAAK,KAAK;AAAA,QACzB,OAAO,QAAQ;AAAA,QACf,UAAU;AAAA,QACV,SAAS,CAAC;AAAA,MACd,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,QAAM,WAAW,eAAe,GAAG,MAAM,WAAW,kBAAkB;AAEtE,WAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AACzC,UAAM,OAAO,YAAY,CAAC;AAC1B,UAAM,EAAE,KAAK,QAAQ,IAAI;AACzB,UAAM,UAAU,WAAW,GAAG;AAC9B,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,YAAM,aAAa,QAAQ,CAAC;AAC5B,UAAI,SAAS;AAEb,YAAM,cAAc,WAAW,YAAY;AAC3C,YAAM,iBAAiB,YAAY,SAAS,IAAI;AAChD,UAAI,kBAAkB,UAAU;AAC5B,iBAAS;AAAA,MACb,WAAW,CAAC,kBAAkB,CAAC,UAAU;AACrC,iBAAS;AAAA,MACb;AAEA,UAAI,OAAO;AACX,UAAI,OAAO;AAEX,UAAI,QAAQ;AACR,eAAO,WAAW,MAAM;AACxB,eAAO,+BAA+B,SAAS,IAAI;AAAA,MACvD;AAEA,UAAI,SAAS,MAAM,MAAM;AACrB,cAAM,cAAc,YAAY,IAAI,EAAE,KAAK,CAAC,EAAE;AAE9C,oBAAY,KAAK;AAAA,UACb,OAAO;AAAA,UACP;AAAA,UACA;AAAA,UACA;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AAAA,EACJ;AAEA,SAAO;AACX;AAlEgB;AAsEhB,iBAAiB,gDAAgD,CAAC,SAAoC;AAClG,MAAI,KAAK,SAAS;AAAS,YAAQ,kBAAkB,EAAE,oBAAoB,KAAK,IAAI;AACpF,MAAI,KAAK,SAAS;AAAY,YAAQ,qBAAqB,EAAE,oBAAoB,KAAK,IAAI;AAC9F,CAAC;;;ACrRD,IAAO,kBAAQ;AAAA,EACX,MAAM;AAAA,IACF,MAAM;AAAA,IACN,OAAO;AAAA,EACX;AAAA,EACA,SAAS;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,EACX;AAAA,EACA,OAAO;AAAA,IACH,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,EACT;AAAA,EACA,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,EACT;AAAA,EACA,SAAS;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,EACT;AAAA,EACA,MAAM;AAAA,IACF,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,EACT;AAAA,EACA,OAAO;AAAA,IACH,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,EACT;AACJ;;;AChCO,SAAS,YAAY,WAAmB,MAAc;AACzD,2BAAyB,WAAW,KAAK,OAAO,KAAK,OAAO,KAAK,SAAS,CAAC;AAC/E;AAFgB;AAIT,SAAS,QAAQ,WAAmB,MAAc;AACrD,MAAI,KAAK,UAAU,IAAI;AACnB,iBAAa,WAAW,KAAK,KAAK;AAClC;AAAA,EACJ;AAEA,kBAAgB,WAAW,KAAK,OAAO,KAAK,OAAO,KAAK,SAAS,KAAK;AAC1E;AAPgB;AAST,IAAM,WAAW,8BAAO,UAAkB;AAC7C,QAAM,YAAY,MAAM,aAAa,KAAK;AAC1C,iBAAe,SAAS,GAAG,SAAS;AACpC,2BAAyB,SAAS;AAClC,QAAM,YAAY,YAAY;AAC9B,YAAU,SAAS;AACnB,kCAAgC,SAAS;AAEzC,MAAI,cAAc,WAAW,kBAAkB;AAAG,wBAAoB,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK;AAAA,WAClG,cAAc,WAAW,kBAAkB;AAAG,wBAAoB,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK,KAAK,GAAG,KAAK;AAC5H,GAVwB;AAYjB,SAAS,eAAe,WAAmB,MAAc;AAC5D,oBAAkB,WAAW,KAAK,OAAO,KAAK,QAAQ,CAAG;AAC7D;AAFgB;AAIhB,IAAM,aAAa,wBAAC,QAAgB,OAAO,IAAI,MAAM,GAAlC;AAEZ,SAAS,aAAa,WAAmB,MAAM;AAClD,QAAM,aAAa,WAAW,KAAK,UAAU;AAC7C,QAAM,cAAc,WAAW,KAAK,WAAW;AAC/C,QAAM,aAAa,WAAW,KAAK,UAAU;AAC7C,QAAM,YAAY,WAAW,KAAK,SAAS;AAC3C,QAAM,aAAa,WAAW,KAAK,UAAU;AAC7C,QAAM,YAAY,WAAW,KAAK,SAAS;AAC3C,QAAM,WAAW,KAAK,WAAW;AACjC,QAAM,UAAU,KAAK,UAAU;AAC/B,QAAM,WAAW,KAAK,WAAW;AACjC,QAAM,YAAY,KAAK;AAEvB;AAAA,IAAoB;AAAA,IAAW;AAAA,IAAY;AAAA,IAAa;AAAA,IAAY;AAAA,IAAW;AAAA,IAAY;AAAA,IAAW;AAAA,IAAU;AAAA,IAC5G;AAAA,IAAU;AAAA,EAAS;AAC3B;AAdgB;AAgBT,SAAS,eAAe,WAAmB,MAAM;AACpD,QAAM,QAAQ,KAAK;AAEnB,MAAI,UAAU,IAAI;AACd,mBAAe,WAAW,KAAK,KAAK;AACpC;AAAA,EACJ;AAEA,QAAM,QAAQ,KAAK,iBAAiB,KAAK,MAAM,KAAK;AAEpD,oBAAkB,WAAW,OAAO,OAAO,KAAK,iBAAiB,CAAG;AACpE,yBAAuB,WAAW,OAAO,GAAG,KAAK,YAAY,KAAK,WAAW;AACjF;AAZgB;AAsCT,SAAS,aAAa,MAAM;AAC/B,QAAM,YAAY,KAAK;AACvB,QAAM,QAAQ,KAAK;AAEnB,aAAW,CAAC,YAAY,UAAU,KAAK,OAAO,QAAQ,eAAc,GAAG;AACnE,UAAM,aAAa,WAAW;AAC9B,UAAM,QAAQ,WAAW;AAEzB,QAAI,eAAe,cAAc,UAAU,UAAU,GAAG;AACpD,YAAM,kBAAkB,wBAAwB,KAAK,KAAK;AAC1D,UAAI,oBAAoB,UAAU,UAAU,EAAE,OAAO;AACjD,iCAAyB,KAAK,OAAO,UAAU,UAAU,EAAE,OAAO,GAAG,CAAC;AAAA,MAC1E;AAAA,IACJ,WAAW,eAAe,UAAU,MAAM,UAAU,GAAG;AACnD,YAAM,cAAc,gBAAgB,KAAK,KAAK;AAC9C,UAAI,gBAAgB,MAAM,UAAU,EAAE,OAAO;AACzC,wBAAgB,KAAK,OAAO,MAAM,UAAU,EAAE,OAAO,GAAG,KAAK;AAAA,MACjE;AAAA,IACJ;AAAA,EACJ;AACJ;AApBgB;AAsBT,SAAS,cAAc,WAAmB,MAAM;AACnD,QAAM,YAAY,KAAK;AACvB,QAAM,QAAQ,KAAK;AACnB,QAAM,cAAc,KAAK;AACzB,aAAW,MAAM,WAAW;AACxB,UAAM,WAAW,UAAU,EAAE;AAC7B,gBAAY,WAAW,QAAQ;AAAA,EACnC;AAEA,aAAW,MAAM,OAAO;AACpB,UAAM,OAAO,MAAM,EAAE;AACrB,YAAQ,WAAW,IAAI;AAAA,EAC3B;AAEA,aAAW,MAAM,aAAa;AAC1B,UAAM,UAAU,YAAY,EAAE;AAC9B,mBAAe,WAAW,OAAO;AAAA,EACrC;AACJ;AAlBgB;AAoBT,IAAM,aAAa,8BAAO,SAAS;AACtC,QAAM,gBAAgB,KAAK;AAC3B,QAAM,YAAY,KAAK;AAEvB,QAAM,SAAS,KAAK,KAAK;AAEzB,MAAI;AAAW,iBAAa,KAAK,SAAS;AAE1C,MAAI;AAAe,eAAW,WAAW,eAAe;AACpD,YAAM,QAAQ,cAAc,OAAO;AACnC,qBAAe,KAAK,KAAK;AAAA,IAC7B;AACJ,GAZ0B;AAcnB,SAAS,cAAc,WAAmB,MAAM;AACnD,MAAI,CAAC;AAAM;AAEX,gCAA8B,SAAS;AAEvC,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,UAAM,aAAa,KAAK,CAAC,EAAE;AAC3B,QAAI,YAAY;AACZ,YAAM,aAAa,WAAW,WAAW,GAAG;AAC5C,YAAM,SAAS,WAAW;AAC1B,iCAA2B,WAAW,YAAY,MAAM;AAAA,IAC5D;AAAA,EACJ;AACJ;AAbgB;AAeT,SAAS,iBAAiB,WAAmB,MAAM;AACtD,QAAM,QAAQ,KAAK;AACnB,QAAM,YAAY,KAAK;AACvB,kBAAgB,WAAW,OAAO,SAAS;AAC/C;AAJgB;AAMhB,eAAsB,iBAAiB,WAAmB,MAAM;AAC5D,QAAM,WAAW,IAAI;AACrB,gBAAc,WAAW,IAAI;AAC7B,mBAAiB,WAAW,KAAK,SAAS;AAC1C,gBAAc,WAAW,KAAK,OAAO;AACzC;AALsB;AAOtB,eAAsB,uBAAuB,MAAM;AAC/C,QAAM,WAAW,IAAI;AACrB,gBAAc,KAAK,IAAI;AACvB,mBAAiB,KAAK,KAAK,SAAS;AACpC,gBAAc,KAAK,KAAK,OAAO;AACnC;AALsB;;;ACzJtB,sDAAoC,OAAO,YAAyB,OAAiB;AACpF,QAAM,uBAAuB,UAAU;AACvC,YAAU;AACV,KAAG,CAAC;AACL,CAAC;AAED,kDAAkC,OAAO,YAAyB,OAAiB;AAClF,eAAa,UAAU;AAEvB,QAAM,MAAM,GAAG;AAEf,QAAM,gBAAgB,MAAM,cAAc,GAAG;AAC7C,gBAAc,UAAU,WAAW;AACnC,wBAAsB,uCAAuC,eAAe,GAAG,aAAa;AAE5F,gBAAc,KAAK,cAAc,OAAO;AAExC,YAAU;AACV,KAAG,CAAC;AACL,CAAC;AAED,0DAAsC,OAAO,OAAe,OAAiB;AAC5E,QAAM,OAAO,WAAW,KAAK;AAC7B,MAAI,CAAC,iBAAiB,IAAI,KAAK,CAAC,aAAa,IAAI,GAAG;AACnD,WAAO,GAAG,CAAC;AAAA,EACZ;AAEA,QAAM,SAAS,IAAI;AAEnB,QAAM,aAAa,MAAM,cAAc,GAAG;AAE1C,aAAW,UAAU,CAAC;AAEtB,gBAAc,KAAK,CAAC,CAAC;AAErB,KAAG,UAAU;AACd,CAAC;AAED,wEAA6C,OAAO,GAAQ,OAAiB;AAC5E,QAAM,UAAU,cAAc;AAE9B,KAAG,OAAO;AACX,CAAC;AAED,0EAA8C,OAAO,MAAc,OAAiB;AACnF,iBAAe,KAAK,IAAI;AACxB,KAAG,CAAC;AACL,CAAC;AAED,sEAA4C,OAAO,MAAc,OAAiB;AACjF,iBAAe,KAAK,IAAI;AACxB,KAAG,CAAC;AACL,CAAC;AAED,kEAA0C,OAAO,MAAc,OAAiB;AAC/E,eAAa,KAAK,IAAI;AACtB,KAAG,CAAC;AACL,CAAC;AAED,8DAAwC,OAAO,MAAc,OAAiB;AAC7E,gBAAc,KAAK,IAAI;AACvB,KAAG,CAAC;AACL,CAAC;AAED,wDAAqC,OAAO,MAAc,OAAiB;AAC1E,UAAQ,KAAK,IAAI;AACjB,KAAG,CAAC;AACL,CAAC;AAED,gEAAyC,OAAO,MAAc,OAAiB;AAC9E,cAAY,KAAK,IAAI;AACrB,KAAG,CAAC;AACL,CAAC;AAED;AAAA;AAAA,EAAwC,OAAO,MAAmB,OAAiB;AAClF,UAAM,OAAO,gBAAe,KAAK,IAAI;AACrC,QAAI,CAAC;AAAM,aAAO,GAAG,KAAK;AAE1B,UAAM,UAAU,KAAK;AACrB,UAAM,OAAO,KAAK;AAClB,UAAM,QAAQ,KAAK;AAEnB,QAAI,CAAC;AAAS,aAAO,GAAG,KAAK;AAE7B,QAAI,SAAS,QAAQ;AACpB,YAAM,cAAc,gBAAgB,KAAK,KAAK;AAE9C,UAAI,gBAAgB,IAAI;AACvB,gBAAQ,KAAK,OAAO;AACpB,WAAG,KAAK;AACR;AAAA,MACD,OAAO;AACN,qBAAa,KAAK,KAAK;AACvB,WAAG,IAAI;AACP;AAAA,MACD;AAAA,IACD,WAAW,SAAS,YAAY;AAC/B,YAAM,kBAAkB,wBAAwB,KAAK,KAAK;AAE1D,UAAI,QAAQ,UAAU,KAAK,KAAK;AAC/B,WAAG,KAAK;AACR;AAAA,MACD;AAEA,UAAI,QAAQ,UAAU,iBAAiB;AACtC,iCAAyB,KAAK,OAAO,KAAK,KAAK,GAAG,CAAC;AACnD,WAAG,IAAI;AACP;AAAA,MACD,OAAO;AACN,oBAAY,KAAK,OAAO;AACxB,WAAG,KAAK;AACR;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACA;AAEA,8DAAwC,OAAO,MAAW,OAAiB;AAC1E,QAAM,eAAe,eAAe;AACpC,QAAM,SAAS,MAAM,sBAAsB,mCAAmC,cAAc,IAAI;AAChG,KAAG,MAAM;AACV,CAAC;AAED,kEAA0C,OAAO,EAAC,GAAE,GAAG,OAAiB;AACvE,QAAM,eAAe,eAAe;AACpC,QAAM,SAAS,MAAM,sBAAsB,qCAAqC,cAAc,EAAE;AAChG,KAAG,MAAM;AACV,CAAC;AAED,kEAA0C,OAAO,MAAW,OAAiB;AAC5E,QAAM,eAAe,eAAe;AACpC,QAAM,SAAS,MAAM,sBAAsB,qCAAqC,cAAc,IAAI;AAClG,KAAG,MAAM;AACV,CAAC;AAED,4DAAuC,OAAO,QAAgB,OAAiB;AAC9E,gBAAc,KAAK,MAAM;AACzB,KAAG,CAAC;AACL,CAAC;;;ACtJD,IAAM,SAAS,QAAQ;AACvB,IAAI,SAAS;AAEb,eAAsB,SAAS,MAAuB,WAAoB,OAAO;AAC7E,QAAM,YAAY,YAAY;AAC9B,QAAM,cAAc,OAAO,MAAM;AAEjC,QAAM,OAAO,KAAK;AAElB,QAAM,OAAO,YAAY,IAAI;AAC7B,MAAI,CAAC;AAAM;AAEX,YAAU,SAAS;AACnB,cAAY;AAEZ,QAAM,eAAe,eAAe;AACpC,QAAM,OAAO,KAAK;AAClB,MAAI,YAAY,KAAK;AAErB,WAAS,aAAa,SAAS;AAE/B,MAAI,UAAU,CAAC;AAEf,QAAM,eAAe,KAAK,SAAS,SAAS;AAC5C,MAAI;AAAc,cAAU,MAAM,sBAAgC,mCAAmC,YAAY;AAEjH,MAAI,SAAS,CAAC;AAEd,QAAM,iBAAiB,KAAK,SAAS,UAAU;AAC/C,MAAI,gBAAgB;AAChB,aAAS,OAAO,OAAO;AAAA,EAC3B;AAEA,QAAM,eAAe,KAAK,SAAS,SAAS;AAC5C,MAAI;AACJ,MAAI,cAAc;AACd,cAAU,cAAc;AAAA,EAC5B;AAEA,QAAM,YAAY,aAAa,IAAI;AAEnC,QAAM,aAAa,MAAM,cAAc,SAAS;AAEhD,MAAI,UAAU;AACV,gBAAY;AAAA,EAChB;AAEA,6CAAwB;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,QAAQ,MAAM,cAAc,QAAQ;AAAA,EACxC,CAAC;AACD,cAAY,MAAM,IAAI;AACtB,mDAA2B,IAAI;AACnC;AAxDsB;AA0DtB,SAAS,aAAa,MAAuB;AACzC,MAAI,CAAC;AAAM,WAAO,CAAC;AAEnB,QAAM,EAAC,YAAY,KAAI,IAAI,OAAO,UAAU;AAE5C,MAAI,CAAC;AAAY,WAAO,CAAC;AACzB,MAAI,CAAC;AAAM,WAAO,CAAC;AAEnB,MAAI,YAAY,EAAC,GAAG,KAAI;AAExB,QAAM,aAAa,cAAc;AAGjC,aAAW,QAAQ,YAAY;AAC3B,UAAM,SAAS,WAAW,IAAI;AAC9B,eAAW,SAAS,QAAQ;AAExB,UAAI,OAAgB;AAEpB,UAAI,QAAQ,UAAU,KAAK,MAAM;AAC7B,eAAO,KAAK,KAAK,SAAS,WAAW,IAAI,IAAI;AAAA,MACjD;AAEA,UAAI,QAAQ,WAAW,KAAK,OAAO;AAC/B,eAAO,KAAK,MAAM,SAAS,WAAW,KAAK,IAAI;AAAA,MACnD;AAMA,UAAI,CAAC,MAAM;AACP,cAAM,iBAAiB,OAAO,KAAK;AACnC,oBAAY,OAAO,OAAO,CAAC,GAAG,WAAW,gBAAgB;AAAA,UACvD,WAAW,OAAO,OAAO,CAAC,GAAG,UAAU,WAAW,eAAe,SAAS;AAAA,QAC5E,CAAC;AAAA,MACL;AAAA,IACJ;AAAA,EACJ;AAEA,SAAO;AAGX;AA3CS;AA6CF,SAAS,YAAY;AACxB,eAAa,KAAK,MAAM;AAExB,aAAW;AACX,cAAY,OAAO,KAAK;AACxB,mDAA2B,KAAK;AACpC;AANgB;;;AC7GhB,gBAAgB,YAAY,MAAM;AAC9B,WAAS,EAAE,MAAM,cAAc,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;AACvD,GAAG,KAAK;AAGV,QAAQ,oBAAoB,OAAOC,MAAa,eAA4B;AACxE,QAAM,iBAAiBA,MAAK,UAAU;AAC1C,CAAC;AAED,QAAQ,0BAA0B,OAAO,gBAAgB;AACrD,QAAM,aAAa,MAAM,sBAAmC,sCAAsC,WAAW;AAC7G,QAAM,uBAAuB,UAAU;AAC3C,CAAC;AAED,QAAQ,0BAA0B,OAAO,gBAAgB;AACrD,SAAO,MAAM,sBAAmC,sCAAsC,WAAW;AACrG,CAAC;AAED,GAAG,6BAA6B,CAAC,SAA0B;AACvD,WAAS,IAAI;AACjB,CAAC;",
  "names": ["delay", "config", "ped"]
}
