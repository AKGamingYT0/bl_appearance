{
  "version": 3,
  "sources": ["../../src/data/head.ts", "../../src/data/face.ts", "../../src/data/drawable.ts", "../../src/data/props.ts", "../../src/client/menu/appearance/index.ts", "../../src/client/menu/tattoos/index.ts", "../../src/data/menuTypes.ts", "../../src/client/enums.ts", "../../src/client/utils/index.ts", "../../src/client/camera/index.ts", "../../src/client/menu/index.ts", "../../src/client/menu/appearance/handler.ts", "../../src/client/menu/outfits/index.ts", "../../src/client/init.ts"],
  "sourcesContent": ["export default [\n    \"Blemishes\",\n    \"FacialHair\",\n    \"Eyebrows\",\n    \"Ageing\",\n    \"Makeup\",\n    \"Blush\",\n    \"Complexion\",\n    \"SunDamage\",\n    \"Lipstick\",\n    \"MolesFreckles\",\n    \"ChestHair\",\n    \"BodyBlemishes\",\n    \"AddBodyBlemishes\",\n    \"EyeColor\"\n]\n", "export default [\n    \"Nose_Width\",\n    \"Nose_Peak_Height\",\n    \"Nose_Peak_Lenght\",\n    \"Nose_Bone_Height\",\n    \"Nose_Peak_Lowering\",\n    \"Nose_Bone_Twist\",\n    \"EyeBrown_Height\",\n    \"EyeBrown_Forward\",\n    \"Cheeks_Bone_High\",\n    \"Cheeks_Bone_Width\",\n    \"Cheeks_Width\",\n    \"Eyes_Openning\",\n    \"Lips_Thickness\",\n    \"Jaw_Bone_Width\",\n    \"Jaw_Bone_Back_Lenght\",\n    \"Chin_Bone_Lowering\",\n    \"Chin_Bone_Length\",\n    \"Chin_Bone_Width\",\n    \"Chin_Hole\",\n    \"Neck_Thikness\"\n]\n", "export default [\n    \"face\",\n    \"masks\",\n    \"hair\",\n    \"torsos\",\n    \"legs\",\n    \"bags\",\n    \"shoes\",\n    \"neck\",\n    \"shirts\",\n    \"vest\",\n    \"decals\",\n    \"jackets\"\n]\n", "export default [\n    \"hats\",\n    \"glasses\",\n    \"earrings\",\n    \"mouth\",\n    \"lhand\",\n    \"rhand\",\n    \"watches\",\n    \"bracelets\"\n]\n", "import HEAD_OVERLAYS from '../../../data/head';\nimport FACE_FEATURES from '../../../data/face';\nimport DRAWABLE_NAMES from '../../../data/drawable';\nimport PROP_NAMES from '../../../data/props';\nimport { HairData, PedHandle, TotalData, DrawableData, HeadStructureData, HeadOverlayData, TAppearance } from '@dataTypes/appearance';\nimport { TTattoo } from '@dataTypes/tattoos';\nimport {ped} from '..';\nimport { triggerServerCallback } from '@utils'\n\nconst findModelIndex = (model: PedHandle) => exports.bl_appearance.models().findIndex((ped: string) => GetHashKey(ped) === model);\n\nconst getPedHair = (): HairData => ({\n    color: GetPedHairColor(ped),\n    highlight: GetPedHairHighlightColor(ped)\n});\n\nconst getPedHeadBlendData = () => {\n    const headblendData = exports.bl_appearance.GetHeadBlendData(ped)\n\n    return {\n        shapeFirst: headblendData.FirstFaceShape,   // father\n        shapeSecond: headblendData.SecondFaceShape, // mother\n        shapeThird: headblendData.ThirdFaceShape,\n\n        skinFirst: headblendData.FirstSkinTone,\n        skinSecond: headblendData.SecondSkinTone,\n        skinThird: headblendData.ThirdSkinTone,\n\n        shapeMix: headblendData.ParentFaceShapePercent, // resemblance\n\n        thirdMix: headblendData.ParentThirdUnkPercent,\n        skinMix: headblendData.ParentSkinTonePercent,   // skinpercent\n\n        hasParent: headblendData.IsParentInheritance,\n    };\n};\n\nconst getHeadOverlay = (): [Record<string, HeadOverlayData>, Record<string, number>] => {\n    let totals: Record<string, number> = {};\n    let headData: Record<string, HeadOverlayData> = {};\n\n    for (let i = 0; i < HEAD_OVERLAYS.length; i++) {\n        const overlay = HEAD_OVERLAYS[i];\n        totals[overlay] = GetNumHeadOverlayValues(i);\n\n        if (overlay === \"EyeColor\") {\n            headData[overlay] = {\n                id: overlay,\n                index: i,\n                overlayValue: GetPedEyeColor(ped)\n            };\n        } else {\n            const [_, overlayValue, colourType, firstColor, secondColor, overlayOpacity] = GetPedHeadOverlayData(ped, i);\n            headData[overlay] = {\n                id: overlay,\n                index: i - 1,\n                overlayValue: overlayValue === 255 ? -1 : overlayValue,\n                colourType: colourType,\n                firstColor: firstColor,\n                secondColor: secondColor,\n                overlayOpacity: overlayOpacity\n            };\n        }\n    }\n\n    return [headData, totals];\n};\n\nconst getHeadStructure = (): Record<string, HeadStructureData> | undefined => {\n    const pedModel = GetEntityModel(ped)\n\n    if (pedModel !== GetHashKey(\"mp_m_freemode_01\") && pedModel !== GetHashKey(\"mp_f_freemode_01\")) return\n\n    let faceStruct = {}\n    for (let i = 0; i < FACE_FEATURES.length; i++) {\n        const overlay = FACE_FEATURES[i]\n        faceStruct[overlay] = {\n            id: overlay,\n            index: i,\n            value: GetPedFaceFeature(ped, i)\n        }\n    }\n\n    return faceStruct\n}\n\nconst getDrawables = (): [Record<string, DrawableData>, Record<string, TotalData>] => {\n    let drawables = {}\n    let totalDrawables = {}\n\n    for (let i = 0; i < DRAWABLE_NAMES.length; i++) {\n        const name = DRAWABLE_NAMES[i]\n        const current = GetPedDrawableVariation(ped, i)\n\n        totalDrawables[name] = {\n            id: name,\n            index: i,\n            total: GetNumberOfPedDrawableVariations(ped, i),\n            textures: GetNumberOfPedTextureVariations(ped, i, current)\n        }\n        drawables[name] = {\n            id: name,\n            index: i,\n            value: GetPedDrawableVariation(ped, i),\n            texture: GetPedTextureVariation(ped, i)\n        }\n    }\n\n    return [drawables, totalDrawables]\n}\n\nconst getProps = (): [Record<string, DrawableData>, Record<string, TotalData>] => {\n    let props = {}\n    let totalProps = {}\n\n    for (let i = 0; i < PROP_NAMES.length; i++) {\n        const name = PROP_NAMES[i]\n        const current = GetPedPropIndex(ped, i)\n\n        totalProps[name] = {\n            id: name,\n            index: i,\n            total: GetNumberOfPedPropDrawableVariations(ped, i),\n            textures: GetNumberOfPedPropTextureVariations(ped, i, current)\n        }\n\n        props[name] = {\n            id: name,\n            index: i,\n            value: GetPedPropIndex(ped, i),\n            texture: GetPedPropTextureIndex(ped, i)\n        }\n    }\n\n    return [props, totalProps]\n}\n\nexport default async (): Promise<TAppearance> => {\n    const [headData, totals] = getHeadOverlay()\n    const [drawables, drawTotal] = getDrawables()\n    const [props, propTotal] = getProps()\n    const model = GetEntityModel(ped)\n\n    return {\n        modelIndex: findModelIndex(model),\n        model: model,\n        hairColor: getPedHair(),\n        headBlend: getPedHeadBlendData(),\n        headOverlay: headData,\n        headOverlayTotal: totals,\n        headStructure: getHeadStructure(),\n        drawables: drawables,\n        props: props,\n        drawTotal: drawTotal,\n        propTotal: propTotal,\n    }\n}", "import { ped } from './../'\nimport { TZoneTattoo } from '@dataTypes/tattoos';\nimport { debugdata } from '@utils';\n\nconst getTattoos = (): TZoneTattoo[] => {\n    const [TATTOO_LIST, TATTOO_CATEGORIES] = exports.bl_appearance.tattoos()\n    const tattooZones: TZoneTattoo[] = [];\n\n    for (let i = 0; i < TATTOO_CATEGORIES.length; i++) {\n        const category = TATTOO_CATEGORIES[i];\n\n        const index = category.index\n        const zone = category.zone\n        const label = category.label\n\n        tattooZones[index] = {\n            zone,\n            label,\n            zoneIndex: index,\n            dlcs: [],\n        };\n\n        for (let j = 0; j < TATTOO_LIST.length; j++) {\n            const dlcData = TATTOO_LIST[j];\n            tattooZones[index].dlcs[j] = {\n                label: dlcData.dlc,\n                dlcIndex: j,\n                tattoos: [],\n            };\n        }\n    }\n\n    const isFemale = GetEntityModel(ped) === GetHashKey('mp_f_freemode_01');\n\n    for (let dlcIndex = 0; dlcIndex < TATTOO_LIST.length; dlcIndex++) {\n        const data = TATTOO_LIST[dlcIndex];\n        const { dlc, tattoos } = data;\n        const dlcHash = GetHashKey(dlc);\n        const tattooDataList = tattoos || [];\n\n        for (let i = 0; i < tattooDataList.length; i++) {\n            const tattooData = tattooDataList[i];\n            let tattoo: string | null = null;\n\n            const lowerTattoo = tattooData.toLowerCase();\n            const isFemaleTattoo = lowerTattoo.includes('_f');\n\n            if (isFemaleTattoo && isFemale) {\n                tattoo = tattooData;\n            } else if (!isFemaleTattoo && !isFemale) {\n                tattoo = tattooData;\n            }\n\n            if (tattoo) {\n                const hash = GetHashKey(tattoo);\n                const zone = GetPedDecorationZoneFromHashes(dlcHash, hash);\n\n                if (zone !== -1 && hash) {\n                    const zoneTattoos = tattooZones[zone].dlcs[dlcIndex].tattoos;\n\n                    zoneTattoos.push({\n                        label: tattoo,\n                        hash,\n                        zone,\n                        dlc,\n                    });\n                }\n            }\n        }\n    }\n\n    return tattooZones;\n}\n\nexport default getTattoos", "export default ['heritage', 'hair', 'clothes', 'accessories', 'face', 'makeup', 'outfits', 'tattoos']\n", "export enum send {\n    visible = 'appearance:visible',\n    data = 'appearance:data',\n}\n\nexport enum appearance {\n    setModel = 'appearance:setModel',\n    setHeadStructure = 'appearance:setHeadStructure',\n    setHeadOverlay = 'appearance:setHeadOverlay',\n    setHeadBlend = 'appearance:setHeadBlend',\n    setProp = 'appearance:setProp',\n    setDrawable = 'appearance:setDrawable',\n    setTattoos = 'appearance:setTattoos',\n    getModelTattoos = 'appearance:getModelTattoos',\n}\n\nexport enum outfits {\n    useOutfit = 'appearance:useOutfit',\n    renameOutfit = 'appearance:renameOutfit',\n    deleteOutfit = 'appearance:deleteOutfit',\n    saveOutfit = 'appearance:saveOutfit',\n}\n\nexport enum receive {\n    close = 'appearance:close',\n\n    toggleItem = 'appearance:toggleItem',\n\n    save = 'appearance:save',\n    cancel = 'appearance:cancel',\n\n    camZoom = 'appearance:camZoom',\n    camMove = 'appearance:camMove',\n    camScroll = 'appearance:camScroll',\n}\n", "export const debugdata = (data: any) => {\n    console.log(JSON.stringify(data, (key, value) => {\n        if (typeof value === \"string\") {\n            return value.replace(/\\n/g, \"\\\\n\");\n        }\n        return value;\n    }, 2))\n}\n\nexport const sendNUIEvent = (action: string, data: any) => {\n    SendNUIMessage({\n        action: action,\n        data: data\n    });\n}\n\nexport const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\n\nexport const requestModel = async (model: string | number): Promise<number> => {\n    let modelHash: number = typeof model === 'number' ? model : GetHashKey(model)\n\n    if (!IsModelValid(modelHash)) {\n        exports.bl_bridge.notify()({\n            title: 'Invalid model!',\n            type: 'error',\n            duration: 1000\n        })\n\n        throw new Error(`attempted to load invalid model '${model}'`);\n    }\n\n    if (HasModelLoaded(modelHash)) return modelHash\n    \n    RequestModel(modelHash);\n\n    const waitForModelLoaded = (): Promise<void> => {\n        return new Promise(resolve => {\n            const interval = setInterval(() => {\n                if (HasModelLoaded(modelHash)) {\n                    clearInterval(interval);\n                    resolve();\n                }\n            }, 100);\n        });\n    };\n\n    await waitForModelLoaded();\n\n    return modelHash;\n};\n\n\n//callback\n//https://github.com/overextended/ox_lib/blob/master/package/client/resource/callback/index.ts\n\nconst resourceName = GetCurrentResourceName()\nconst eventTimers: Record<string, number> = {};\nconst activeEvents: Record<string, (...args: any[]) => void> = {};\n\nfunction eventTimer(eventName: string, delay: number | null) {\n    if (delay && delay > 0) {\n        const currentTime = GetGameTimer();\n\n        if ((eventTimers[eventName] || 0) > currentTime) return false;\n\n        eventTimers[eventName] = currentTime + delay;\n    }\n\n    return true;\n}\n\nonNet(`__ox_cb_${resourceName}`, (key: string, ...args: any) => {\n    const resolve = activeEvents[key];\n    return resolve && resolve(...args);\n});\n\nexport function triggerServerCallback<T = unknown>(\n    eventName: string,\n    delay: number | null,\n    ...args: any\n): Promise<T> | void {\n    if (!eventTimer(eventName, delay)) {\n        return;\n    }\n\n    let key: string;\n\n    do {\n        key = `${eventName}:${Math.floor(Math.random() * (100000 + 1))}`;\n    } while (activeEvents[key]);\n\n    emitNet(`__ox_cb_${eventName}`, resourceName, key, ...args);\n\n    return new Promise<T>((resolve) => {\n        activeEvents[key] = resolve;\n    });\n};\n\n//locale\n\nexport const requestLocale = (resourceSetName: string) => {\n    return new Promise((resolve) => {\n        const checkResourceFile = () => {\n            if (RequestResourceFileSet(resourceSetName)) {\n                const currentLan = exports.bl_appearance.config().locale\n                let localeFileContent = LoadResourceFile(resourceName, `locale/${currentLan}.json`);\n                if (!localeFileContent) {\n                    console.error(`${currentLan}.json not found in locale, please verify!, we used english for now!`)\n                    localeFileContent = LoadResourceFile(resourceName, `locale/en.json`)\n                }\n                resolve(localeFileContent);\n            } else {\n                setTimeout(checkResourceFile, 100);\n            }\n        }\n        checkResourceFile();\n    });\n}\n\nexport const locale = async (id: string, ...args: string[]) => {\n    const locale = await requestLocale('locale');\n    let argIndex = 0;\n\n    const result = locale[id].replace(/%s/g, (match: string) => argIndex < args.length ? args[argIndex] : match);\n    return result\n}\n\nexport const getFrameworkID = () => {\n    return exports.bl_appearance.config().useBridge ? exports.bl_bridge.core && exports.bl_bridge.core().getPlayerData().cid : null;\n}", "import { Camera, Vector3, CameraBones } from '@dataTypes/camera';\nimport {ped} from './../menu';\nimport { delay} from '../utils';\nimport { receive } from '@enums';\n\nlet running: boolean = false;\nlet camDistance: number = 1.8;\nlet cam: Camera | null = null;\nlet angleY: number = 0.0;\nlet angleZ: number = 0.0;\nlet targetCoords: Vector3 | null = null;\nlet oldCam: Camera | null = null;\nlet changingCam: boolean = false;\nlet lastX: number = 0;\nlet currentBone: keyof CameraBones = 'head'\n\nconst CameraBones: CameraBones = {\n    head: 31086,\n    torso: 24818,\n    legs: 14201,\n};\n\nconst cos = (degrees: number): number => {\n    return Math.cos((degrees * Math.PI) / 180);\n}\n\nconst sin = (degrees: number): number => {\n    return Math.sin((degrees * Math.PI) / 180);\n}\n\nconst getAngles = (): number[] => {\n    const x =((cos(angleZ) * cos(angleY)) + (cos(angleY) * cos(angleZ))) / 2 * camDistance;\n    const y = ((sin(angleZ) * cos(angleY)) + (cos(angleY) * sin(angleZ))) / 2 * camDistance;\n    const z = sin(angleY) * camDistance;\n\n    return [x, y, z]\n}\n\n\nconst setCamPosition = (mouseX?: number, mouseY?: number): void => {\n    if (!running || !targetCoords || changingCam) return;\n\n    mouseX = mouseX ?? 0.0;\n    mouseY = mouseY ?? 0.0;\n\n    angleZ -= mouseX;\n    angleY += mouseY;\n    angleY = Math.min(Math.max(angleY, 0.0), 89.0);\n\n    const [x, y, z] = getAngles()\n\n    SetCamCoord(cam, targetCoords.x + x, targetCoords.y + y, targetCoords.z + z)\n    PointCamAtCoord(cam, targetCoords.x, targetCoords.y, targetCoords.z)\n}\n\nconst moveCamera = async (coords: Vector3, distance?: number) => {\n    const heading: number = GetEntityHeading(ped) + 94;\n    distance = distance ?? 1.0;\n\n    changingCam = true;\n    camDistance = distance;\n    angleZ = heading;\n\n    const [x, y, z] = getAngles()\n\n    const newcam: Camera = CreateCamWithParams(\n        \"DEFAULT_SCRIPTED_CAMERA\",\n        coords.x + x,\n        coords.y + y,\n        coords.z + z,\n        0.0,\n        0.0,\n        0.0,\n        70.0,\n        false,\n        0\n    );\n\n    targetCoords = coords;\n    changingCam = false;\n    oldCam = cam\n    cam = newcam;\n\n    PointCamAtCoord(newcam, coords.x, coords.y, coords.z);\n    SetCamActiveWithInterp(newcam, oldCam, 250, 0, 0);\n\n    await delay(250)\n\n    SetCamUseShallowDofMode(newcam, true);\n    SetCamNearDof(newcam, 0.4);\n    SetCamFarDof(newcam, 1.2);\n    SetCamDofStrength(newcam, 0.3);\n    useHiDof(newcam);\n\n    DestroyCam(oldCam, true);\n}\n\nconst useHiDof = (currentcam: Camera) => {\n    if (!(DoesCamExist(cam) && currentcam == cam)) return;\n    SetUseHiDof();\n    setTimeout(useHiDof, 0);\n}\n\nexport const startCamera = async () => {\n    if (running) return;\n    running = true;\n    camDistance = 1.0;\n    cam = CreateCam(\"DEFAULT_SCRIPTED_CAMERA\", true);\n    const [x, y, z]: number[] = GetPedBoneCoords(ped, 31086, 0.0, 0.0, 0.0)\n    SetCamCoord(cam, x, y, z)\n    RenderScriptCams(true, true, 1000, true, true);\n    moveCamera({x: x, y: y, z: z}, camDistance);\n}\n\nexport const stopCamera = (): void => {\n    if (!running) return;\n    running = false;\n\n    RenderScriptCams(false, true, 250, true, false);\n    DestroyCam(cam, true);\n    cam = null;\n    targetCoords = null;\n}\n\nconst setCamera = (type?: keyof CameraBones): void => {\n    const bone: number | undefined = CameraBones[type];\n    if (currentBone == type) return;\n    const [x, y, z]: number[] = bone ? GetPedBoneCoords(ped, bone, 0.0, 0.0, bone === 14201 ? 0.2 : 0.0) : GetEntityCoords(ped, false);\n\n    moveCamera({\n        x: x, \n        y: y, \n        z: z + 0.0\n    }, 1.0);\n\n    currentBone = type;\n}\n\nRegisterNuiCallback(receive.camMove, (data, cb) => {\n    cb(1)\n    let heading: number = GetEntityHeading(ped);\n    if (lastX == data.x) {\n        return;\n    }\n    heading = data.x > lastX ? heading + 5 : heading - 5;\n    SetEntityHeading(ped, heading);\n});\n\nRegisterNuiCallback(receive.camScroll, (type: number, cb: Function) => {\n    switch (type) {\n        case 2:\n            setCamera();\n            break;\n        case 1:\n            setCamera(\"legs\");\n            break;\n        case 3:\n            setCamera(\"head\");\n            break;\n    }\n    cb(1);\n});\n\nRegisterNuiCallback(receive.camZoom, (data, cb) => {\n    if (data === \"down\") {\n        const newDistance: number = camDistance + 0.05;\n        camDistance = newDistance >= 1.0 ? 1.0 : newDistance;\n    } else if (data === \"up\") {\n        const newDistance: number = camDistance - 0.05;\n        camDistance = newDistance <= 0.35 ? 0.35 : newDistance;\n    }\n\n    camDistance = camDistance;\n    setCamPosition();\n    cb(1);\n});\n\n", "import getAppearance from './appearance'\nimport getTattoos from './tattoos'\nimport { TAppearance} from '@dataTypes/appearance';\nimport { Outfit} from '@dataTypes/outfits';\nimport { TTattoo} from '@dataTypes/tattoos';\nimport menuTypes from '../../data/menuTypes';\nimport { send, receive } from '@enums'\nimport { sendNUIEvent, delay, requestLocale, requestModel, triggerServerCallback, getFrameworkID } from '@utils'\nimport { startCamera, stopCamera } from './../camera'\n\nexport let playerAppearance: TAppearance | null = null\n\nconst bl_appearance = exports.bl_appearance\nexport let isMenuOpen = false\nexport let ped = 0\n\nconst updatePed = () => {\n    if (!isMenuOpen) return;\n    ped = PlayerPedId()\n    setTimeout(updatePed, 100);\n}\n\nconst validMenuTypes = (type: string[]) => {\n    for (let i = 0; i < type.length; i++) {\n        if (!menuTypes.includes(type[i])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nconst getBlacklist = () => {\n    return bl_appearance.blacklist()\n\n}\n\nexport const openMenu = async (type: string[] | string) => {\n    isMenuOpen = true\n    updatePed()\n    await delay(150)\n    startCamera()\n\n    const isArray = typeof type !== 'string'\n\n    if (isArray && !validMenuTypes(type)) {\n        return console.error('Error: menu type not found');\n    }\n    const frameworkdId = getFrameworkID()\n    const serverID = GetPlayerServerId(PlayerId())\n    const outfits = await triggerServerCallback<Outfit[]>('bl_appearance:server:getOutfits', frameworkdId) as Outfit[] \n    const tattoos = await triggerServerCallback<TTattoo[]>('bl_appearance:server:getTattoos', frameworkdId) as TTattoo[]\n\n    const appearance = await getAppearance()\n    playerAppearance = appearance\n    playerAppearance.tattoos = tattoos\n\n    sendNUIEvent(send.data, {\n        tabs: isArray ? type : menuTypes.includes(type) ? type : menuTypes,\n        appearance: appearance,\n        blacklist: getBlacklist(),\n        tattoos: getTattoos(),\n        outfits: outfits,\n        models: bl_appearance.models(),\n        locale: await requestLocale('locale')\n    })\n\n    sendNUIEvent(send.visible, true)\n    SetNuiFocus(true, true)\n}\n\nexport const setAppearance = async (appearanceData: TAppearance) => {\n    const model = appearanceData.model\n    if (model) {\n        const modelHash = await requestModel(model)\n    \n        SetPlayerModel(PlayerId(), modelHash)\n    \n        await delay(150)\n    \n        SetModelAsNoLongerNeeded(modelHash)\n        SetPedDefaultComponentVariation(ped)\n    \n        if (model === GetHashKey(\"mp_m_freemode_01\")) SetPedHeadBlendData(ped, 0, 0, 0, 0, 0, 0, 0, 0, 0, false)\n        else if (model === GetHashKey(\"mp_f_freemode_01\")) SetPedHeadBlendData(ped, 45, 21, 0, 20, 15, 0, 0.3, 0.1, 0, false)\n    }\n\n    const headBlend = appearanceData.headBlend\n    if (headBlend) SetPedHeadBlendData(ped, headBlend.shapeFirst, headBlend.shapeSecond, headBlend.shapeThird, headBlend.skinFirst, headBlend.skinSecond, headBlend.skinThird, headBlend.shapeMix, headBlend.skinMix, headBlend.thirdMix, headBlend.hasParent)\n\n    if (appearanceData.headStructure) for (const data of Object.values(appearanceData.headStructure)) {\n        SetPedFaceFeature(ped, data.index, data.value)\n    }\n\n    if (appearanceData.drawables) for (const data of Object.values(appearanceData.drawables)) {\n        if (data.index === 2) console.log(data.index, data.value, data.texture)\n        SetPedComponentVariation(ped, data.index, data.value, data.texture, 0)\n    }\n\n    if (appearanceData.props) for (const data of Object.values(appearanceData.props)) {\n        if (data.value === -1) {\n            ClearPedProp(ped, data.index)\n            return 1\n        }\n        SetPedPropIndex(ped, data.index, data.value, data.texture, false)\n    }\n\n    if (appearanceData.hairColor) {\n        SetPedHairColor(ped, appearanceData.hairColor.color, appearanceData.hairColor.highlight) \n    }\n\n    if (appearanceData.headOverlay) for (const data of Object.values(appearanceData.headOverlay)) {\n        const value = data.overlayValue == -1 ? 255 : data.overlayValue\n\n        if (data.id === 'EyeColor') SetPedEyeColor(ped, value) \n        else {\n            SetPedHeadOverlay(ped, data.index, value, data.overlayOpacity)\n            SetPedHeadOverlayColor(ped, data.index, 1, data.firstColor, data.secondColor)\n        }\n    }\n\n    if (appearanceData.tattoos) {\n        ClearPedDecorationsLeaveScars(ped)\n        for (const element of appearanceData.tattoos) {\n            const tattoo = element.tattoo\n            if (tattoo) {\n                AddPedDecorationFromHashes(ped, GetHashKey(tattoo.dlc), tattoo.hash)\n            }\n        }  \n    }\n}\n\nexport const closeMenu = async (save: boolean) => {\n    if (!save) await setAppearance(playerAppearance)\n    else {\n        const config = exports.bl_appearance.config()\n        const appearance = await getAppearance()\n        emitNet(\"bl_appearance:server:saveAppearances\", {\n            id: config.useBridge ? exports.bl_bridge.core && exports.bl_bridge.core().getPlayerData().cid : null,\n\n            skin: {\n                headBlend: appearance.headBlend,\n                headStructure: appearance.headStructure,\n                headOverlay: appearance.headOverlay,\n                hairColor: appearance.hairColor,\n                model: appearance.model,\n            },\n            clothes: {\n                drawables: appearance.drawables,\n                props: appearance.props,\n                headOverlay: appearance.headOverlay,\n            },\n            tattoos: playerAppearance.currentTattoos || [],\n        });\n    }\n\n    stopCamera()\n    isMenuOpen = false\n    SetNuiFocus(false, false)\n    sendNUIEvent(send.visible, false)\n}\n\nRegisterNuiCallback(receive.close, (save: boolean, cb: Function) => {\n    cb(1)\n    closeMenu(save)\n});", "import { appearance, outfits } from '@enums';\nimport { debugdata, requestModel, delay, triggerServerCallback, getFrameworkID} from '../../utils';\nimport { HeadOverlayData, HeadStructureData, DrawableData} from '@dataTypes/appearance';\nimport { TTattoo} from '@dataTypes/tattoos';\nimport getAppearance from '.'\nimport {ped, playerAppearance} from './../'\nimport {THeadBlend} from '@dataTypes/appearance'\n\nconst actionHandlers = {\n    [appearance.setModel]: async (model: string) => {\n        const modelHash = await requestModel(model)\n\n        SetPlayerModel(PlayerId(), modelHash)\n\n        await delay(150)\n\n        SetModelAsNoLongerNeeded(modelHash)\n        SetPedDefaultComponentVariation(ped)\n\n        if (model === \"mp_m_freemode_01\") SetPedHeadBlendData(ped, 0, 0, 0, 0, 0, 0, 0, 0, 0, false)\n        else if (model === \"mp_f_freemode_01\") SetPedHeadBlendData(ped, 45, 21, 0, 20, 15, 0, 0.3, 0.1, 0, false)\n\n        return getAppearance()\n    },\n    [appearance.setHeadStructure]: (data: HeadStructureData) => {\n        SetPedFaceFeature(ped, data.index, data.value)\n        return data\n    },\n    [appearance.setHeadOverlay]: (data: HeadOverlayData) => {\n        const value = data.overlayValue == -1 ? 255 : data.overlayValue\n\n        if (data.id === 'EyeColor') SetPedEyeColor(ped, data.eyeColor) \n        else if (data.id === 'hairColor') SetPedHairColor(ped, data.hairColor, data.hairHighlight) \n        else {\n            SetPedHeadOverlay(ped, data.index, value, data.overlayOpacity)\n            SetPedHeadOverlayColor(ped, data.index, 1, data.firstColor, data.secondColor)\n        }\n\n        return 1\n    },\n    [appearance.setHeadBlend]: (data: THeadBlend) => {\n        SetPedHeadBlendData(\n            ped, \n            data.shapeFirst, \n            data.shapeSecond, \n            data.shapeThird, \n            data.skinFirst, \n            data.skinSecond, \n            data.skinThird, \n            data.shapeMix, \n            data.skinMix, \n            data.thirdMix, \n            data.hasParent\n        )\n        return 1\n    },\n    [appearance.setProp]: (data: DrawableData) => {\n        if (data.value === -1) {\n            ClearPedProp(ped, data.index)\n            return 1\n        }\n        SetPedPropIndex(ped, data.index, data.value, data.texture, false)\n        return data.isTexture ? 1 : GetNumberOfPedPropTextureVariations(ped, data.index, data.value) // if it texture why we would call a useless native \n    },\n    [appearance.setDrawable]: (data: DrawableData) => {\n        SetPedComponentVariation(ped, data.index, data.value, data.texture, 0)\n\n        return data.isTexture ? 1 : GetNumberOfPedTextureVariations(ped, data.index, data.value)-1\n    },\n    [appearance.setTattoos]: (data: TTattoo[]) => {\n        if (!data) return 1\n\n        playerAppearance.currentTattoos = data\n        ClearPedDecorationsLeaveScars(ped)\n\n        for (const element of data) {\n            const tattoo = element.tattoo\n            if (tattoo) {\n                AddPedDecorationFromHashes(ped, GetHashKey(tattoo.dlc), tattoo.hash)\n            }\n        }\n        \n        return 1\n    },\n    [appearance.getModelTattoos]: (data: any) => {\n        return data\n    },\n\n};\n\nfor (const action of Object.values(appearance)) {\n    RegisterNuiCallback(action, async (data: any, cb: Function) => {\n        const handler = actionHandlers[action];\n        if (!handler) return\n\n        cb(await handler(data))\n    });\n}\n", "import { outfits } from '@enums';\nimport { debugdata, requestModel, delay, getFrameworkID, triggerServerCallback} from '../../utils';\nimport { Outfit, TOutfitData} from '@dataTypes/outfits';\nimport { TTattoo} from '@dataTypes/tattoos';\nimport getAppearance from './../appearance'\nimport {ped, playerAppearance, setAppearance} from './../'\n\nconst actionHandlers = {\n    [outfits.saveOutfit]: async ({label, outfit}) => {\n        const frameworkdId = getFrameworkID()\n        return await triggerServerCallback(\"bl_appearance:server:saveOutfit\", frameworkdId, {label, outfit})\n    },\n    [outfits.deleteOutfit]: async (id: string) => {\n        const frameworkdId = getFrameworkID()\n        return await triggerServerCallback(\"bl_appearance:server:deleteOutfit\", frameworkdId, id)\n    },\n    [outfits.renameOutfit]: async ({label, id}) => {\n        const frameworkdId = getFrameworkID()\n        return await triggerServerCallback(\"bl_appearance:server:renameOutfit\", frameworkdId, label, id)\n    },\n    [outfits.useOutfit]: (outfit: TOutfitData) => {\n        setAppearance(outfit)\n        return true\n    },\n}\n\nfor (const action of Object.values(outfits)) {\n    RegisterNuiCallback(action, async (data: any, cb: Function) => {\n        const handler = actionHandlers[action];\n        if (!handler) return\n\n        cb(await handler(data))\n    });\n}\n", "import { openMenu } from './menu'\nimport { triggerServerCallback } from '@utils'\nimport('./menu/appearance/handler')\nimport('./menu/outfits')\n\nRegisterCommand('openMenu', () => {\n  openMenu('all')\n}, false)\n\nsetTimeout(async () => {\n  const args = [1, null, 3, null, null, 6];\n  const response = await triggerServerCallback<{ serverValue: number }>('test:server', 1, args);\n  if (!response) return;\n}, 100);"],
  "mappings": "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",
  "names": ["ped", "appearance", "outfits", "delay", "outfits", "appearance", "actionHandlers"]
}
