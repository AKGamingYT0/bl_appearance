{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/@overextended+oxmysql@1.3.0/node_modules/@overextended/oxmysql/MySQL.ts", "../../src/server/utils/index.ts", "../../src/server/init.ts"],
  "sourcesContent": ["type Query = string | number;\r\ntype Params = Record<string, unknown> | unknown[] | Function;\r\ntype Callback<T> = (result: T | null) => void;\r\n\r\ntype Transaction =\r\n  | string[]\r\n  | [string, Params][]\r\n  | { query: string; values: Params }[]\r\n  | { query: string; parameters: Params }[];\r\n\r\ninterface Result {\r\n  [column: string | number]: any;\r\n  affectedRows?: number;\r\n  fieldCount?: number;\r\n  info?: string;\r\n  insertId?: number;\r\n  serverStatus?: number;\r\n  warningStatus?: number;\r\n  changedRows?: number;\r\n}\r\n\r\ninterface Row {\r\n  [column: string | number]: unknown;\r\n}\r\n\r\ninterface OxMySQL {\r\n  store: (query: string) => void;\r\n  ready: (callback: () => void) => void;\r\n  query: <T = Result | null>(query: Query, params?: Params | Callback<T>, cb?: Callback<T>) => Promise<T>;\r\n  single: <T = Row | null>(\r\n    query: Query,\r\n    params?: Params | Callback<Exclude<T, []>>,\r\n    cb?: Callback<Exclude<T, []>>\r\n  ) => Promise<Exclude<T, []>>;\r\n  scalar: <T = unknown | null>(\r\n    query: Query,\r\n    params?: Params | Callback<Exclude<T, []>>,\r\n    cb?: Callback<Exclude<T, []>>\r\n  ) => Promise<Exclude<T, []>>;\r\n  update: <T = number | null>(query: Query, params?: Params | Callback<T>, cb?: Callback<T>) => Promise<T>;\r\n  insert: <T = number | null>(query: Query, params?: Params | Callback<T>, cb?: Callback<T>) => Promise<T>;\r\n  prepare: <T = any>(query: Query, params?: Params | Callback<T>, cb?: Callback<T>) => Promise<T>;\r\n  rawExecute: <T = Result | null>(query: Query, params?: Params | Callback<T>, cb?: Callback<T>) => Promise<T>;\r\n  transaction: (query: Transaction, params?: Params | Callback<boolean>, cb?: Callback<boolean>) => Promise<boolean>;\r\n  isReady: () => boolean;\r\n  awaitConnection: () => Promise<true>;\r\n}\r\n\r\nconst QueryStore: string[] = [];\r\n\r\nfunction assert(condition: boolean, message: string) {\r\n  if (!condition) throw new TypeError(message);\r\n}\r\n\r\nconst safeArgs = (query: Query | Transaction, params?: any, cb?: Function, transaction?: true) => {\r\n  if (typeof query === 'number') query = QueryStore[query];\r\n\r\n  if (transaction) {\r\n    assert(typeof query === 'object', `First argument expected object, recieved ${typeof query}`);\r\n  } else {\r\n    assert(typeof query === 'string', `First argument expected string, received ${typeof query}`);\r\n  }\r\n\r\n  if (params) {\r\n    const paramType = typeof params;\r\n    assert(\r\n      paramType === 'object' || paramType === 'function',\r\n      `Second argument expected object or function, received ${paramType}`\r\n    );\r\n\r\n    if (!cb && paramType === 'function') {\r\n      cb = params;\r\n      params = undefined;\r\n    }\r\n  }\r\n\r\n  if (cb !== undefined) assert(typeof cb === 'function', `Third argument expected function, received ${typeof cb}`);\r\n\r\n  return [query, params, cb];\r\n};\r\n\r\nconst exp = global.exports.oxmysql;\r\nconst currentResourceName = GetCurrentResourceName();\r\n\r\nfunction execute(method: string, query: Query | Transaction, params?: Params) {\r\n  return new Promise((resolve, reject) => {\r\n    exp[method](\r\n      query,\r\n      params,\r\n      (result, error) => {\r\n        if (error) return reject(error);\r\n        resolve(result);\r\n      },\r\n      currentResourceName,\r\n      true\r\n    );\r\n  }) as any;\r\n}\r\n\r\nexport const oxmysql: OxMySQL = {\r\n  store(query) {\r\n    assert(typeof query !== 'string', `Query expects a string, received ${typeof query}`);\r\n\r\n    return QueryStore.push(query);\r\n  },\r\n  ready(callback) {\r\n    setImmediate(async () => {\r\n      while (GetResourceState('oxmysql') !== 'started') await new Promise((resolve) => setTimeout(resolve, 50));\r\n      callback();\r\n    });\r\n  },\r\n  async query(query, params, cb) {\r\n    [query, params, cb] = safeArgs(query, params, cb);\r\n    const result = await execute('query', query, params);\r\n    return cb ? cb(result) : result;\r\n  },\r\n  async single(query, params, cb) {\r\n    [query, params, cb] = safeArgs(query, params, cb);\r\n    const result = await execute('single', query, params);\r\n    return cb ? cb(result) : result;\r\n  },\r\n  async scalar(query, params, cb) {\r\n    [query, params, cb] = safeArgs(query, params, cb);\r\n    const result = await execute('scalar', query, params);\r\n    return cb ? cb(result) : result;\r\n  },\r\n  async update(query, params, cb) {\r\n    [query, params, cb] = safeArgs(query, params, cb);\r\n    const result = await execute('update', query, params);\r\n    return cb ? cb(result) : result;\r\n  },\r\n  async insert(query, params, cb) {\r\n    [query, params, cb] = safeArgs(query, params, cb);\r\n    const result = await execute('insert', query, params);\r\n    return cb ? cb(result) : result;\r\n  },\r\n  async prepare(query, params, cb) {\r\n    [query, params, cb] = safeArgs(query, params, cb);\r\n    const result = await execute('prepare', query, params);\r\n    return cb ? cb(result) : result;\r\n  },\r\n  async rawExecute(query, params, cb) {\r\n    [query, params, cb] = safeArgs(query, params, cb);\r\n    const result = await execute('rawExecute', query, params);\r\n    return cb ? cb(result) : result;\r\n  },\r\n  async transaction(query, params, cb) {\r\n    [query, params, cb] = safeArgs(query, params, cb, true);\r\n    const result = await execute('transaction', query, params);\r\n    return cb ? cb(result) : result;\r\n  },\r\n  isReady() {\r\n    return exp.isReady();\r\n  },\r\n  async awaitConnection() {\r\n    return await exp.awaitConnection();\r\n  },\r\n};\r\n", "//https://github.com/overextended/ox_lib/blob/master/package/server/resource/callback/index.ts\n\nexport function onClientCallback(eventName: string, cb: (playerId: number, ...args: any[]) => any) {\n    onNet(`__ox_cb_${eventName}`, async (resource: string, key: string, ...args: any[]) => {\n        const src = source;\n        let response: any;\n\n        try {\n            response = await cb(src, ...args);\n        } catch (e: any) {\n            console.error(`an error occurred while handling callback event ${eventName} | Error: `, e.message);\n        }\n\n        emitNet(`__ox_cb_${resource}`, src, key, response);\n    });\n}\n", "import { onClientCallback } from './utils';\nimport { oxmysql } from '@overextended/oxmysql';\nimport { Outfit } from '@dataTypes/outfits';\nimport { captureRejectionSymbol } from 'events';\n\nonClientCallback('bl_appearance:server:getOutfits', async (frameworkdId) => {\n\tlet response = await oxmysql.prepare(\n\t\t'SELECT * FROM outfits WHERE player_id = ?',\n\t\t[frameworkdId]\n\t);\n\tif (!response) return [];\n\n    if (!Array.isArray(response)) {\n        response = [response]\n    }\n\n\tconst outfits = response.map(\n\t\t(outfit: { id: number; label: string; outfit: string }) => {\n\t\t\treturn {\n\t\t\t\tid: outfit.id,\n\t\t\t\tlabel: outfit.label,\n\t\t\t\toutfit: JSON.parse(outfit.outfit),\n\t\t\t};\n\t\t}\n\t);\n\n\treturn outfits;\n});\n\nonClientCallback(\n\t'bl_appearance:server:renameOutfit',\n\tasync (frameworkdId, newName, id) => {\n\t\tconst result = await oxmysql.update(\n\t\t\t'UPDATE outfits SET label = ? WHERE player_id = ? AND id = ?',\n\t\t\t[newName, frameworkdId, id]\n\t\t);\n\t\treturn result;\n\t}\n);\n\nonClientCallback(\n\t'bl_appearance:server:deleteOutfit',\n\tasync (frameworkdId, id) => {\n\t\tconst result = await oxmysql.update(\n\t\t\t'DELETE FROM outfits WHERE player_id = ? AND id = ?',\n\t\t\t[frameworkdId, id]\n\t\t);\n\t\treturn result > 0;\n\t}\n);\n\nonClientCallback(\n\t'bl_appearance:server:saveOutfit',\n\tasync (frameworkdId, data: Outfit) => {\n\t\tconsole.log(frameworkdId, data.label, data.outfit, JSON.stringify(data.outfit))\n\t\tconst id = await oxmysql.insert(\n\t\t\t'INSERT INTO outfits (player_id, label, outfit) VALUES (?, ?, ?)',\n\t\t\t[frameworkdId, data.label, JSON.stringify(data.outfit)]\n\t\t);\n        console.log('id', id)\n\t\treturn id;\n\t}\n);\n\nonClientCallback(\n\t'bl_appearance:server:saveSkin',\n\tasync (frameworkdId, skin) => {\n\t\tconst result = await oxmysql.update(\n\t\t\t'UPDATE appearance SET skin = ? WHERE id = ?',\n\t\t\t[JSON.stringify(skin), frameworkdId]\n\t\t);\n\t\treturn result;\n\t}\n);\n\nonClientCallback(\n\t'bl_appearance:server:saveClothes',\n\tasync (frameworkdId, clothes) => {\n\t\tconst result = await oxmysql.update(\n\t\t\t'UPDATE appearance SET clothes = ? WHERE id = ?',\n\t\t\t[JSON.stringify(clothes), frameworkdId]\n\t\t);\n\t\treturn result;\n\t}\n);\n\nonClientCallback(\n\t'bl_appearance:server:saveTattoos',\n\tasync (frameworkdId, tattoos) => {\n\t\tconst result = await oxmysql.update(\n\t\t\t'UPDATE appearance SET tattoos = ? WHERE id = ?',\n\t\t\t[JSON.stringify(tattoos), frameworkdId]\n\t\t);\n\t\treturn result;\n\t}\n);\n\n// lib.callback.register(\"xrp_appearance:cb:getClothes\", function(source, charid)\n//     local result = MySQL.query.await('SELECT clothes FROM players WHERE citizenid = ?', { charid })\n//     local clothes = json.decode(result[1].clothes)\n\n//     return clothes\n// end)\n\n// lib.callback.register(\"xrp_appearance:cb:getSkin\", function(source, charid)\n//     local result = MySQL.query.await('SELECT skin FROM players WHERE citizenid = ?', { charid })\n//     local skin = json.decode(result[1].skin) or {}\n\n//     return skin\n// end)\n\n// lib.callback.register('xrp_appearance:cb:getTattoos', function(source)\n//     local charid = QBCore.Functions.GetPlayer(source).PlayerData.citizenid\n\n//     local result = MySQL.query.await('SELECT tattoos FROM players WHERE citizenid = ?', { charid })\n//     local tattoos = json.decode(result[1].tattoos)\n\n//     return tattoos\n// end)\n\nonClientCallback('bl_appearance:server:getSkin', async (frameworkdId) => {\n\tconst response = await oxmysql.prepare(\n\t\t'SELECT skin FROM appearance WHERE id = ?',\n\t\t[frameworkdId]\n\t);\n\treturn JSON.parse(response);\n});\n\nonClientCallback('bl_appearance:server:getClothes', async (frameworkdId) => {\n\tconst response = await oxmysql.prepare(\n\t\t'SELECT clothes FROM appearance WHERE id = ?',\n\t\t[frameworkdId]\n\t);\n\treturn JSON.parse(response);\n});\n\nonClientCallback('bl_appearance:server:getTattoos', async (frameworkdId) => {\n\tconst response = await oxmysql.prepare(\n\t\t'SELECT tattoos FROM appearance WHERE id = ?',\n\t\t[frameworkdId]\n\t);\n\treturn JSON.parse(response) || [];\n});\n\nonClientCallback('bl_appearance:server:getAppearance', async (frameworkdId) => {\n\tconst response = await oxmysql.prepare(\n\t\t'SELECT * FROM appearance WHERE id = ?',\n\t\t[frameworkdId]\n\t);\n\treturn JSON.parse(response);\n});\n"],
  "mappings": "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",
  "names": []
}
